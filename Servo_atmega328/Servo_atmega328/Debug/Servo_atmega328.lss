
Servo_atmega328.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000912  000009a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000912  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  00800112  00800112  000009b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e0b  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bd  00000000  00000000  00001923  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007e8  00000000  00000000  000022e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00002ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000534  00000000  00000000  00002ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000403  00000000  00000000  000031d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000035d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e1       	ldi	r30, 0x12	; 18
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 34       	cpi	r26, 0x42	; 66
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 87 04 	jmp	0x90e	; 0x90e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

int main(void)
{
	uint8_t dozvola = 1, prethodno;
  
	timer_1ms_init();
  a6:	0e 94 52 01 	call	0x2a4	; 0x2a4 <timer_1ms_init>
	pwm_init();
  aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <pwm_init>
	uart_init();
  ae:	0e 94 04 02 	call	0x408	; 0x408 <uart_init>
	//ext_int_init();
	
	sei();		//NEMOJ ZABORAVITI, global interrupt enable
  b2:	78 94       	sei

char bafer[30];

int main(void)
{
	uint8_t dozvola = 1, prethodno;
  b4:	dd 24       	eor	r13, r13
  b6:	d3 94       	inc	r13
    {
		
		
		if (pritisnut && dozvola && !prethodno)
		{
			dozvola = 0;
  b8:	e1 2c       	mov	r14, r1
		{
			OCR1A = set_servo_angle(0, 0, 180);
		}
		else if (sys_time == 1600)
		{
			OCR1A = TOP_PWM;
  ba:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <TOP_PWM>
  be:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <TOP_PWM+0x1>
  c2:	c8 e8       	ldi	r28, 0x88	; 136
  c4:	d0 e0       	ldi	r29, 0x00	; 0
			
			
			   dozvola = 1;
  c6:	cc 24       	eor	r12, r12
  c8:	c3 94       	inc	r12
	
    while (1) 
    {
		
		
		if (pritisnut && dozvola && !prethodno)
  ca:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <pritisnut>
  ce:	88 23       	and	r24, r24
  d0:	69 f0       	breq	.+26     	; 0xec <main+0x46>
  d2:	dd 20       	and	r13, r13
  d4:	59 f0       	breq	.+22     	; 0xec <main+0x46>
  d6:	f1 10       	cpse	r15, r1
  d8:	09 c0       	rjmp	.+18     	; 0xec <main+0x46>
		{
			dozvola = 0;
			sys_time=0;   //startuj brojac
  da:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <sys_time>
  de:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <sys_time+0x1>
  e2:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <sys_time+0x2>
  e6:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <sys_time+0x3>
    {
		
		
		if (pritisnut && dozvola && !prethodno)
		{
			dozvola = 0;
  ea:	de 2c       	mov	r13, r14
			sys_time=0;   //startuj brojac
		}	
			
			
		if (sys_time == 0)
  ec:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <sys_time>
  f0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <sys_time+0x1>
  f4:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <sys_time+0x2>
  f8:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <sys_time+0x3>
  fc:	89 2b       	or	r24, r25
  fe:	8a 2b       	or	r24, r26
 100:	8b 2b       	or	r24, r27
 102:	41 f4       	brne	.+16     	; 0x114 <main+0x6e>
		{
			OCR1A = set_servo_angle(90, 0, 180);
 104:	44 eb       	ldi	r20, 0xB4	; 180
 106:	6e 2d       	mov	r22, r14
 108:	8a e5       	ldi	r24, 0x5A	; 90
 10a:	0e 94 0e 01 	call	0x21c	; 0x21c <set_servo_angle>
 10e:	99 83       	std	Y+1, r25	; 0x01
 110:	88 83       	st	Y, r24
 112:	25 c0       	rjmp	.+74     	; 0x15e <main+0xb8>
		}
		else if (sys_time == 800)
 114:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <sys_time>
 118:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <sys_time+0x1>
 11c:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <sys_time+0x2>
 120:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <sys_time+0x3>
 124:	80 32       	cpi	r24, 0x20	; 32
 126:	93 40       	sbci	r25, 0x03	; 3
 128:	a1 05       	cpc	r26, r1
 12a:	b1 05       	cpc	r27, r1
 12c:	41 f4       	brne	.+16     	; 0x13e <main+0x98>
		{
			OCR1A = set_servo_angle(0, 0, 180);
 12e:	44 eb       	ldi	r20, 0xB4	; 180
 130:	6e 2d       	mov	r22, r14
 132:	8e 2d       	mov	r24, r14
 134:	0e 94 0e 01 	call	0x21c	; 0x21c <set_servo_angle>
 138:	99 83       	std	Y+1, r25	; 0x01
 13a:	88 83       	st	Y, r24
 13c:	10 c0       	rjmp	.+32     	; 0x15e <main+0xb8>
		}
		else if (sys_time == 1600)
 13e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <sys_time>
 142:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <sys_time+0x1>
 146:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <sys_time+0x2>
 14a:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <sys_time+0x3>
 14e:	80 34       	cpi	r24, 0x40	; 64
 150:	96 40       	sbci	r25, 0x06	; 6
 152:	a1 05       	cpc	r26, r1
 154:	b1 05       	cpc	r27, r1
 156:	19 f4       	brne	.+6      	; 0x15e <main+0xb8>
		{
			OCR1A = TOP_PWM;
 158:	19 83       	std	Y+1, r17	; 0x01
 15a:	08 83       	st	Y, r16
			
			
			   dozvola = 1;
 15c:	dc 2c       	mov	r13, r12
		}
		prethodno=pritisnut;	
 15e:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <pritisnut>
			
		
				
		
		
		if(flag_100ms)
 162:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <flag_100ms>
 166:	88 23       	and	r24, r24
 168:	09 f4       	brne	.+2      	; 0x16c <main+0xc6>
 16a:	af cf       	rjmp	.-162    	; 0xca <main+0x24>
		{
			flag_100ms = 0; //resetuj flag koji se setuje u ISR-u
 16c:	e0 92 18 01 	sts	0x0118, r14	; 0x800118 <flag_100ms>
			
			send_str("\n");
			
			*/
			
			send_str("  pritisnut:");
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 14 02 	call	0x428	; 0x428 <send_str>
			utoa(pritisnut, bafer, 10);
 178:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <pritisnut>
 17c:	4a e0       	ldi	r20, 0x0A	; 10
 17e:	50 e0       	ldi	r21, 0x00	; 0
 180:	6a e1       	ldi	r22, 0x1A	; 26
 182:	71 e0       	ldi	r23, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	0e 94 52 04 	call	0x8a4	; 0x8a4 <utoa>
			send_str(bafer);
 18a:	8a e1       	ldi	r24, 0x1A	; 26
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 14 02 	call	0x428	; 0x428 <send_str>
			
	
			
			
			send_str("\n");
 192:	8e e0       	ldi	r24, 0x0E	; 14
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	0e 94 14 02 	call	0x428	; 0x428 <send_str>
 19a:	97 cf       	rjmp	.-210    	; 0xca <main+0x24>

0000019c <__vector_1>:
}



ISR(INT0_vect)
{
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
	
	if (!opadajuca)
 1a8:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1ac:	81 11       	cpse	r24, r1
 1ae:	0c c0       	rjmp	.+24     	; 0x1c8 <__vector_1+0x2c>
	{
		opadajuca = 1;
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
		sys_time = 0;
 1b6:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <sys_time>
 1ba:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <sys_time+0x1>
 1be:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <sys_time+0x2>
 1c2:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <sys_time+0x3>
		TCNT0 = 0; //reset tajmera, tj start
 1c6:	16 bc       	out	0x26, r1	; 38
	}
	
	
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <pwm_init>:

const uint_least16_t TOP_PWM = 39999;

void pwm_init()
{
	DDRB |= 1<<DDB1;    //PB1 = pwm izlaz za servo
 1d4:	21 9a       	sbi	0x04, 1	; 4
	
	TCCR1A |= (1<<COM1A1)|(1<<WGM11);           //Clear OC1A/OC1B on compare match, set OC1A/OC1B at BOTTOM (non-inverting mode); fast pwm mode, top = ICR1
 1d6:	e0 e8       	ldi	r30, 0x80	; 128
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	82 68       	ori	r24, 0x82	; 130
 1de:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM13)|(1<<WGM12)|(1<<CS11);	//fast pwm mode, top = ICR1;  prescaler = 8
 1e0:	e1 e8       	ldi	r30, 0x81	; 129
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	8a 61       	ori	r24, 0x1A	; 26
 1e8:	80 83       	st	Z, r24
	ICR1 = TOP_PWM;								//top=39999, 50 Hz
 1ea:	8f e3       	ldi	r24, 0x3F	; 63
 1ec:	9c e9       	ldi	r25, 0x9C	; 156
 1ee:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1f2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1A = TOP_PWM;							//duty cycle (faktor ispune);  0 - 39999 (0-100%). Inicijalno na max, tj. 5V const
 1f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	//TIMSK1 |= 1<<OCIE1A;						//compare match A (OCR1A) interrupt enable
	TCNT1 = 0;									//resetujem tc brojac da ovde krene od nule. Kada udari u ICR1(39999) resetuje se
 1fe:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 202:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 206:	08 95       	ret

00000208 <__vector_11>:
	
}


ISR(TIMER1_COMPA_vect)	//pwm prekid, ne treba mi?
{
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
	
 212:	0f 90       	pop	r0
 214:	0f be       	out	0x3f, r0	; 63
 216:	0f 90       	pop	r0
 218:	1f 90       	pop	r1
 21a:	18 95       	reti

0000021c <set_servo_angle>:




uint_least16_t set_servo_angle(uint_least8_t angle, uint_least8_t min, uint_least8_t max)
{
 21c:	cf 92       	push	r12
 21e:	df 92       	push	r13
 220:	ef 92       	push	r14
 222:	ff 92       	push	r15
	static const float koef = 0.049;	
	static const float y_ofset = 3.1;									
	
	
	//zabranjeno stanje
	if( min >= max)
 224:	64 17       	cp	r22, r20
 226:	b8 f5       	brcc	.+110    	; 0x296 <set_servo_angle+0x7a>
 228:	85 3b       	cpi	r24, 0xB5	; 181
 22a:	08 f0       	brcs	.+2      	; 0x22e <set_servo_angle+0x12>
 22c:	84 eb       	ldi	r24, 0xB4	; 180
 22e:	84 17       	cp	r24, r20
 230:	08 f4       	brcc	.+2      	; 0x234 <set_servo_angle+0x18>
 232:	48 2f       	mov	r20, r24
		angle = max;
	if(angle < min)
		angle = min;
	
	
	DuC = ((koef*angle + y_ofset)/100 )* TOP_PWM;		//top pwm = pwm period registar
 234:	65 3b       	cpi	r22, 0xB5	; 181
 236:	08 f0       	brcs	.+2      	; 0x23a <set_servo_angle+0x1e>
 238:	64 eb       	ldi	r22, 0xB4	; 180
 23a:	64 17       	cp	r22, r20
 23c:	08 f4       	brcc	.+2      	; 0x240 <set_servo_angle+0x24>
 23e:	64 2f       	mov	r22, r20
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 37 03 	call	0x66e	; 0x66e <__floatsisf>
 24a:	29 e3       	ldi	r18, 0x39	; 57
 24c:	34 eb       	ldi	r19, 0xB4	; 180
 24e:	48 e4       	ldi	r20, 0x48	; 72
 250:	5d e3       	ldi	r21, 0x3D	; 61
 252:	0e 94 c3 03 	call	0x786	; 0x786 <__mulsf3>
 256:	26 e6       	ldi	r18, 0x66	; 102
 258:	36 e6       	ldi	r19, 0x66	; 102
 25a:	46 e4       	ldi	r20, 0x46	; 70
 25c:	50 e4       	ldi	r21, 0x40	; 64
 25e:	0e 94 28 02 	call	0x450	; 0x450 <__addsf3>
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	48 ec       	ldi	r20, 0xC8	; 200
 268:	52 e4       	ldi	r21, 0x42	; 66
 26a:	0e 94 94 02 	call	0x528	; 0x528 <__divsf3>
 26e:	6b 01       	movw	r12, r22
 270:	7c 01       	movw	r14, r24
 272:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <TOP_PWM>
 276:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <TOP_PWM+0x1>
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 35 03 	call	0x66a	; 0x66a <__floatunsisf>
 282:	9b 01       	movw	r18, r22
 284:	ac 01       	movw	r20, r24
 286:	c7 01       	movw	r24, r14
 288:	b6 01       	movw	r22, r12
 28a:	0e 94 c3 03 	call	0x786	; 0x786 <__mulsf3>
 28e:	0e 94 06 03 	call	0x60c	; 0x60c <__fixunssfsi>
 292:	cb 01       	movw	r24, r22
														//top pwm mnozi za koeficijentom (0-1), sto je fakticki faktor ispune
	return DuC;
 294:	02 c0       	rjmp	.+4      	; 0x29a <set_servo_angle+0x7e>
	static const float y_ofset = 3.1;									
	
	
	//zabranjeno stanje
	if( min >= max)
		return 0;
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	90 e0       	ldi	r25, 0x00	; 0
	
	DuC = ((koef*angle + y_ofset)/100 )* TOP_PWM;		//top pwm = pwm period registar
														//top pwm mnozi za koeficijentom (0-1), sto je fakticki faktor ispune
	return DuC;
	
 29a:	ff 90       	pop	r15
 29c:	ef 90       	pop	r14
 29e:	df 90       	pop	r13
 2a0:	cf 90       	pop	r12
 2a2:	08 95       	ret

000002a4 <timer_1ms_init>:
volatile uint_fast8_t pritisnut = 0;


void timer_1ms_init()	//sistemski tajmer, timer/counter0
{
	DDRD |= 1<<DDD6;	//PD6 izlaz = timer debug check on o-scope
 2a4:	56 9a       	sbi	0x0a, 6	; 10
	DDRD |= 1<<DDD7;
 2a6:	57 9a       	sbi	0x0a, 7	; 10
	DDRB |= 1<DDB5;     //led
 2a8:	20 9a       	sbi	0x04, 0	; 4
	PORTB &= ~(1<<PORTB5); //led OFF
 2aa:	2d 98       	cbi	0x05, 5	; 5
	
	DDRD &= ~(1<<DDD2);  //PD2 ulaz za taster
 2ac:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= 1<<PORTD2;  //PD2 pull up
 2ae:	5a 9a       	sbi	0x0b, 2	; 11
	
	TCCR0A |= 1<<WGM01;				//CTC mode
 2b0:	84 b5       	in	r24, 0x24	; 36
 2b2:	82 60       	ori	r24, 0x02	; 2
 2b4:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS01)|(1<<CS00);	//prescaler = 64
 2b6:	85 b5       	in	r24, 0x25	; 37
 2b8:	83 60       	ori	r24, 0x03	; 3
 2ba:	85 bd       	out	0x25, r24	; 37
	OCR0A = TOP_timer;				//top = 249;  1kHz
 2bc:	89 ef       	ldi	r24, 0xF9	; 249
 2be:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= 1<<OCIE0A;			//compare match A (OCR0A) interrupt enable
 2c0:	ee e6       	ldi	r30, 0x6E	; 110
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	82 60       	ori	r24, 0x02	; 2
 2c8:	80 83       	st	Z, r24
	TCNT0 = 0;						//resetujem tc brojac da ovde krene od nule. Kada udari u OCR0A(249) resetuje se
 2ca:	16 bc       	out	0x26, r1	; 38
 2cc:	08 95       	ret

000002ce <__vector_14>:
	
}

ISR(TIMER0_COMPA_vect)	//1ms prekid
{
 2ce:	1f 92       	push	r1
 2d0:	0f 92       	push	r0
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	0f 92       	push	r0
 2d6:	11 24       	eor	r1, r1
 2d8:	2f 93       	push	r18
 2da:	3f 93       	push	r19
 2dc:	4f 93       	push	r20
 2de:	5f 93       	push	r21
 2e0:	6f 93       	push	r22
 2e2:	7f 93       	push	r23
 2e4:	8f 93       	push	r24
 2e6:	9f 93       	push	r25
 2e8:	af 93       	push	r26
 2ea:	bf 93       	push	r27
 2ec:	ef 93       	push	r30
 2ee:	ff 93       	push	r31
		
		PORTB &= ~(1<<PORTB5); //led OFF
	}
	*/
	
	if( ReadPin(PIND, 2)==0  &&  PIND2_old == ReadPin(PIND, 2) )
 2f0:	4a 99       	sbic	0x09, 2	; 9
 2f2:	0a c0       	rjmp	.+20     	; 0x308 <__vector_14+0x3a>
 2f4:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <PIND2_old>
 2f8:	89 b1       	in	r24, 0x09	; 9
 2fa:	84 70       	andi	r24, 0x04	; 4
 2fc:	89 13       	cpse	r24, r25
 2fe:	04 c0       	rjmp	.+8      	; 0x308 <__vector_14+0x3a>
	{
		//taster pritisnut i debounce-ovan, jer je prosla 1ms od citanja sa PIND2_old
		//takoreci, stanje je stabilno posle 1ms
		pritisnut = 1;
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <pritisnut>
 306:	0a c0       	rjmp	.+20     	; 0x31c <__vector_14+0x4e>
		
		
	}
	else if ( ReadPin(PIND, 2)!=0  &&  PIND2_old == ReadPin(PIND, 2) )
 308:	4a 9b       	sbis	0x09, 2	; 9
 30a:	08 c0       	rjmp	.+16     	; 0x31c <__vector_14+0x4e>
 30c:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <PIND2_old>
 310:	89 b1       	in	r24, 0x09	; 9
 312:	84 70       	andi	r24, 0x04	; 4
 314:	89 13       	cpse	r24, r25
 316:	02 c0       	rjmp	.+4      	; 0x31c <__vector_14+0x4e>
	{
		//taster otpusten i debounce-ovan
		pritisnut = 0;
 318:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <pritisnut>
		
	}
	
	
	
	PIND2_old = ReadPin(PIND, 2);	//citanje sa maskom sa PD2,  PIND & 0b100;
 31c:	89 b1       	in	r24, 0x09	; 9
 31e:	84 70       	andi	r24, 0x04	; 4
 320:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <PIND2_old>
	
	
	
	
	if (!(sys_time % 100))
 324:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <sys_time>
 328:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <sys_time+0x1>
 32c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <sys_time+0x2>
 330:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <sys_time+0x3>
 334:	24 e6       	ldi	r18, 0x64	; 100
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	50 e0       	ldi	r21, 0x00	; 0
 33c:	0e 94 30 04 	call	0x860	; 0x860 <__udivmodsi4>
 340:	67 2b       	or	r22, r23
 342:	68 2b       	or	r22, r24
 344:	69 2b       	or	r22, r25
 346:	21 f4       	brne	.+8      	; 0x350 <__vector_14+0x82>
	{
		flag_100ms = 1;
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <flag_100ms>
		PIND |= 1<<PIND7;
 34e:	4f 9a       	sbi	0x09, 7	; 9
	}
	
	
	
	sys_time++;
 350:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <sys_time>
 354:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <sys_time+0x1>
 358:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <sys_time+0x2>
 35c:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <sys_time+0x3>
 360:	01 96       	adiw	r24, 0x01	; 1
 362:	a1 1d       	adc	r26, r1
 364:	b1 1d       	adc	r27, r1
 366:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <sys_time>
 36a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <sys_time+0x1>
 36e:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <sys_time+0x2>
 372:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <sys_time+0x3>
	
	PIND |= 1<<PIND6;	//toggle
 376:	4e 9a       	sbi	0x09, 6	; 9
 378:	ff 91       	pop	r31
 37a:	ef 91       	pop	r30
 37c:	bf 91       	pop	r27
 37e:	af 91       	pop	r26
 380:	9f 91       	pop	r25
 382:	8f 91       	pop	r24
 384:	7f 91       	pop	r23
 386:	6f 91       	pop	r22
 388:	5f 91       	pop	r21
 38a:	4f 91       	pop	r20
 38c:	3f 91       	pop	r19
 38e:	2f 91       	pop	r18
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

0000039a <__vector_20>:
volatile unsigned char poslato;
volatile unsigned char input_char;
volatile unsigned char input_buffer[INPUT_BUFF_SIZE], buff_size=0;

ISR(USART_TX_vect)
{
 39a:	1f 92       	push	r1
 39c:	0f 92       	push	r0
 39e:	0f b6       	in	r0, 0x3f	; 63
 3a0:	0f 92       	push	r0
 3a2:	11 24       	eor	r1, r1
	poslato=0;
 3a4:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <poslato>
}
 3a8:	0f 90       	pop	r0
 3aa:	0f be       	out	0x3f, r0	; 63
 3ac:	0f 90       	pop	r0
 3ae:	1f 90       	pop	r1
 3b0:	18 95       	reti

000003b2 <__vector_18>:

ISR(USART_RX_vect)
{
 3b2:	1f 92       	push	r1
 3b4:	0f 92       	push	r0
 3b6:	0f b6       	in	r0, 0x3f	; 63
 3b8:	0f 92       	push	r0
 3ba:	11 24       	eor	r1, r1
 3bc:	8f 93       	push	r24
 3be:	ef 93       	push	r30
 3c0:	ff 93       	push	r31
	input_char=UDR0;
 3c2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3c6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <input_char>
	
	if (buff_size<INPUT_BUFF_SIZE)
 3ca:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <buff_size>
 3ce:	88 30       	cpi	r24, 0x08	; 8
 3d0:	98 f4       	brcc	.+38     	; 0x3f8 <__vector_18+0x46>
	{
		input_buffer[buff_size]=input_char;
 3d2:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <buff_size>
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <input_char>
 3dc:	e6 5c       	subi	r30, 0xC6	; 198
 3de:	fe 4f       	sbci	r31, 0xFE	; 254
 3e0:	80 83       	st	Z, r24
		buff_size++;
 3e2:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <buff_size>
 3e6:	8f 5f       	subi	r24, 0xFF	; 255
 3e8:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <buff_size>
		input_buffer[buff_size]='\0';
 3ec:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <buff_size>
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	e6 5c       	subi	r30, 0xC6	; 198
 3f4:	fe 4f       	sbci	r31, 0xFE	; 254
 3f6:	10 82       	st	Z, r1
	}
}
 3f8:	ff 91       	pop	r31
 3fa:	ef 91       	pop	r30
 3fc:	8f 91       	pop	r24
 3fe:	0f 90       	pop	r0
 400:	0f be       	out	0x3f, r0	; 63
 402:	0f 90       	pop	r0
 404:	1f 90       	pop	r1
 406:	18 95       	reti

00000408 <uart_init>:

void uart_init()
{
	UCSR0A = 0b10;		//dupla brzina slanja
 408:	82 e0       	ldi	r24, 0x02	; 2
 40a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B = 0b11011000;	//RX complete interupt enable; TX complete interupt enable; Receiver enable; Transmitter enable
 40e:	88 ed       	ldi	r24, 0xD8	; 216
 410:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = 0b110;			//asinhroni rezim, 8-bit, no parity, 1 stop bit
 414:	86 e0       	ldi	r24, 0x06	; 6
 416:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0 = 207;	//Baud 9600 bps
 41a:	8f ec       	ldi	r24, 0xCF	; 207
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 422:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 426:	08 95       	ret

00000428 <send_str>:
}

void send_str(unsigned char *str)
{
 428:	fc 01       	movw	r30, r24
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
 42a:	90 81       	ld	r25, Z
 42c:	99 23       	and	r25, r25
 42e:	71 f0       	breq	.+28     	; 0x44c <send_str+0x24>
 430:	31 96       	adiw	r30, 0x01	; 1
	{
		UDR0=*str;
 432:	a6 ec       	ldi	r26, 0xC6	; 198
 434:	b0 e0       	ldi	r27, 0x00	; 0
		poslato=1;
 436:	81 e0       	ldi	r24, 0x01	; 1
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
	{
		UDR0=*str;
 438:	9c 93       	st	X, r25
		poslato=1;
 43a:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <poslato>
		while (poslato);
 43e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <poslato>
 442:	91 11       	cpse	r25, r1
 444:	fc cf       	rjmp	.-8      	; 0x43e <send_str+0x16>
void send_str(unsigned char *str)
{
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
 446:	91 91       	ld	r25, Z+
 448:	91 11       	cpse	r25, r1
 44a:	f6 cf       	rjmp	.-20     	; 0x438 <send_str+0x10>
 44c:	08 95       	ret

0000044e <__subsf3>:
 44e:	50 58       	subi	r21, 0x80	; 128

00000450 <__addsf3>:
 450:	bb 27       	eor	r27, r27
 452:	aa 27       	eor	r26, r26
 454:	0e 94 3f 02 	call	0x47e	; 0x47e <__addsf3x>
 458:	0c 94 89 03 	jmp	0x712	; 0x712 <__fp_round>
 45c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__fp_pscA>
 460:	38 f0       	brcs	.+14     	; 0x470 <__addsf3+0x20>
 462:	0e 94 82 03 	call	0x704	; 0x704 <__fp_pscB>
 466:	20 f0       	brcs	.+8      	; 0x470 <__addsf3+0x20>
 468:	39 f4       	brne	.+14     	; 0x478 <__addsf3+0x28>
 46a:	9f 3f       	cpi	r25, 0xFF	; 255
 46c:	19 f4       	brne	.+6      	; 0x474 <__addsf3+0x24>
 46e:	26 f4       	brtc	.+8      	; 0x478 <__addsf3+0x28>
 470:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <__fp_nan>
 474:	0e f4       	brtc	.+2      	; 0x478 <__addsf3+0x28>
 476:	e0 95       	com	r30
 478:	e7 fb       	bst	r30, 7
 47a:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_inf>

0000047e <__addsf3x>:
 47e:	e9 2f       	mov	r30, r25
 480:	0e 94 9a 03 	call	0x734	; 0x734 <__fp_split3>
 484:	58 f3       	brcs	.-42     	; 0x45c <__addsf3+0xc>
 486:	ba 17       	cp	r27, r26
 488:	62 07       	cpc	r22, r18
 48a:	73 07       	cpc	r23, r19
 48c:	84 07       	cpc	r24, r20
 48e:	95 07       	cpc	r25, r21
 490:	20 f0       	brcs	.+8      	; 0x49a <__addsf3x+0x1c>
 492:	79 f4       	brne	.+30     	; 0x4b2 <__addsf3x+0x34>
 494:	a6 f5       	brtc	.+104    	; 0x4fe <__addsf3x+0x80>
 496:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_zero>
 49a:	0e f4       	brtc	.+2      	; 0x49e <__addsf3x+0x20>
 49c:	e0 95       	com	r30
 49e:	0b 2e       	mov	r0, r27
 4a0:	ba 2f       	mov	r27, r26
 4a2:	a0 2d       	mov	r26, r0
 4a4:	0b 01       	movw	r0, r22
 4a6:	b9 01       	movw	r22, r18
 4a8:	90 01       	movw	r18, r0
 4aa:	0c 01       	movw	r0, r24
 4ac:	ca 01       	movw	r24, r20
 4ae:	a0 01       	movw	r20, r0
 4b0:	11 24       	eor	r1, r1
 4b2:	ff 27       	eor	r31, r31
 4b4:	59 1b       	sub	r21, r25
 4b6:	99 f0       	breq	.+38     	; 0x4de <__addsf3x+0x60>
 4b8:	59 3f       	cpi	r21, 0xF9	; 249
 4ba:	50 f4       	brcc	.+20     	; 0x4d0 <__addsf3x+0x52>
 4bc:	50 3e       	cpi	r21, 0xE0	; 224
 4be:	68 f1       	brcs	.+90     	; 0x51a <__addsf3x+0x9c>
 4c0:	1a 16       	cp	r1, r26
 4c2:	f0 40       	sbci	r31, 0x00	; 0
 4c4:	a2 2f       	mov	r26, r18
 4c6:	23 2f       	mov	r18, r19
 4c8:	34 2f       	mov	r19, r20
 4ca:	44 27       	eor	r20, r20
 4cc:	58 5f       	subi	r21, 0xF8	; 248
 4ce:	f3 cf       	rjmp	.-26     	; 0x4b6 <__addsf3x+0x38>
 4d0:	46 95       	lsr	r20
 4d2:	37 95       	ror	r19
 4d4:	27 95       	ror	r18
 4d6:	a7 95       	ror	r26
 4d8:	f0 40       	sbci	r31, 0x00	; 0
 4da:	53 95       	inc	r21
 4dc:	c9 f7       	brne	.-14     	; 0x4d0 <__addsf3x+0x52>
 4de:	7e f4       	brtc	.+30     	; 0x4fe <__addsf3x+0x80>
 4e0:	1f 16       	cp	r1, r31
 4e2:	ba 0b       	sbc	r27, r26
 4e4:	62 0b       	sbc	r22, r18
 4e6:	73 0b       	sbc	r23, r19
 4e8:	84 0b       	sbc	r24, r20
 4ea:	ba f0       	brmi	.+46     	; 0x51a <__addsf3x+0x9c>
 4ec:	91 50       	subi	r25, 0x01	; 1
 4ee:	a1 f0       	breq	.+40     	; 0x518 <__addsf3x+0x9a>
 4f0:	ff 0f       	add	r31, r31
 4f2:	bb 1f       	adc	r27, r27
 4f4:	66 1f       	adc	r22, r22
 4f6:	77 1f       	adc	r23, r23
 4f8:	88 1f       	adc	r24, r24
 4fa:	c2 f7       	brpl	.-16     	; 0x4ec <__addsf3x+0x6e>
 4fc:	0e c0       	rjmp	.+28     	; 0x51a <__addsf3x+0x9c>
 4fe:	ba 0f       	add	r27, r26
 500:	62 1f       	adc	r22, r18
 502:	73 1f       	adc	r23, r19
 504:	84 1f       	adc	r24, r20
 506:	48 f4       	brcc	.+18     	; 0x51a <__addsf3x+0x9c>
 508:	87 95       	ror	r24
 50a:	77 95       	ror	r23
 50c:	67 95       	ror	r22
 50e:	b7 95       	ror	r27
 510:	f7 95       	ror	r31
 512:	9e 3f       	cpi	r25, 0xFE	; 254
 514:	08 f0       	brcs	.+2      	; 0x518 <__addsf3x+0x9a>
 516:	b0 cf       	rjmp	.-160    	; 0x478 <__addsf3+0x28>
 518:	93 95       	inc	r25
 51a:	88 0f       	add	r24, r24
 51c:	08 f0       	brcs	.+2      	; 0x520 <__addsf3x+0xa2>
 51e:	99 27       	eor	r25, r25
 520:	ee 0f       	add	r30, r30
 522:	97 95       	ror	r25
 524:	87 95       	ror	r24
 526:	08 95       	ret

00000528 <__divsf3>:
 528:	0e 94 a8 02 	call	0x550	; 0x550 <__divsf3x>
 52c:	0c 94 89 03 	jmp	0x712	; 0x712 <__fp_round>
 530:	0e 94 82 03 	call	0x704	; 0x704 <__fp_pscB>
 534:	58 f0       	brcs	.+22     	; 0x54c <__divsf3+0x24>
 536:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__fp_pscA>
 53a:	40 f0       	brcs	.+16     	; 0x54c <__divsf3+0x24>
 53c:	29 f4       	brne	.+10     	; 0x548 <__divsf3+0x20>
 53e:	5f 3f       	cpi	r21, 0xFF	; 255
 540:	29 f0       	breq	.+10     	; 0x54c <__divsf3+0x24>
 542:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_inf>
 546:	51 11       	cpse	r21, r1
 548:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_szero>
 54c:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <__fp_nan>

00000550 <__divsf3x>:
 550:	0e 94 9a 03 	call	0x734	; 0x734 <__fp_split3>
 554:	68 f3       	brcs	.-38     	; 0x530 <__divsf3+0x8>

00000556 <__divsf3_pse>:
 556:	99 23       	and	r25, r25
 558:	b1 f3       	breq	.-20     	; 0x546 <__divsf3+0x1e>
 55a:	55 23       	and	r21, r21
 55c:	91 f3       	breq	.-28     	; 0x542 <__divsf3+0x1a>
 55e:	95 1b       	sub	r25, r21
 560:	55 0b       	sbc	r21, r21
 562:	bb 27       	eor	r27, r27
 564:	aa 27       	eor	r26, r26
 566:	62 17       	cp	r22, r18
 568:	73 07       	cpc	r23, r19
 56a:	84 07       	cpc	r24, r20
 56c:	38 f0       	brcs	.+14     	; 0x57c <__divsf3_pse+0x26>
 56e:	9f 5f       	subi	r25, 0xFF	; 255
 570:	5f 4f       	sbci	r21, 0xFF	; 255
 572:	22 0f       	add	r18, r18
 574:	33 1f       	adc	r19, r19
 576:	44 1f       	adc	r20, r20
 578:	aa 1f       	adc	r26, r26
 57a:	a9 f3       	breq	.-22     	; 0x566 <__divsf3_pse+0x10>
 57c:	35 d0       	rcall	.+106    	; 0x5e8 <__divsf3_pse+0x92>
 57e:	0e 2e       	mov	r0, r30
 580:	3a f0       	brmi	.+14     	; 0x590 <__divsf3_pse+0x3a>
 582:	e0 e8       	ldi	r30, 0x80	; 128
 584:	32 d0       	rcall	.+100    	; 0x5ea <__divsf3_pse+0x94>
 586:	91 50       	subi	r25, 0x01	; 1
 588:	50 40       	sbci	r21, 0x00	; 0
 58a:	e6 95       	lsr	r30
 58c:	00 1c       	adc	r0, r0
 58e:	ca f7       	brpl	.-14     	; 0x582 <__divsf3_pse+0x2c>
 590:	2b d0       	rcall	.+86     	; 0x5e8 <__divsf3_pse+0x92>
 592:	fe 2f       	mov	r31, r30
 594:	29 d0       	rcall	.+82     	; 0x5e8 <__divsf3_pse+0x92>
 596:	66 0f       	add	r22, r22
 598:	77 1f       	adc	r23, r23
 59a:	88 1f       	adc	r24, r24
 59c:	bb 1f       	adc	r27, r27
 59e:	26 17       	cp	r18, r22
 5a0:	37 07       	cpc	r19, r23
 5a2:	48 07       	cpc	r20, r24
 5a4:	ab 07       	cpc	r26, r27
 5a6:	b0 e8       	ldi	r27, 0x80	; 128
 5a8:	09 f0       	breq	.+2      	; 0x5ac <__divsf3_pse+0x56>
 5aa:	bb 0b       	sbc	r27, r27
 5ac:	80 2d       	mov	r24, r0
 5ae:	bf 01       	movw	r22, r30
 5b0:	ff 27       	eor	r31, r31
 5b2:	93 58       	subi	r25, 0x83	; 131
 5b4:	5f 4f       	sbci	r21, 0xFF	; 255
 5b6:	3a f0       	brmi	.+14     	; 0x5c6 <__divsf3_pse+0x70>
 5b8:	9e 3f       	cpi	r25, 0xFE	; 254
 5ba:	51 05       	cpc	r21, r1
 5bc:	78 f0       	brcs	.+30     	; 0x5dc <__divsf3_pse+0x86>
 5be:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_inf>
 5c2:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_szero>
 5c6:	5f 3f       	cpi	r21, 0xFF	; 255
 5c8:	e4 f3       	brlt	.-8      	; 0x5c2 <__divsf3_pse+0x6c>
 5ca:	98 3e       	cpi	r25, 0xE8	; 232
 5cc:	d4 f3       	brlt	.-12     	; 0x5c2 <__divsf3_pse+0x6c>
 5ce:	86 95       	lsr	r24
 5d0:	77 95       	ror	r23
 5d2:	67 95       	ror	r22
 5d4:	b7 95       	ror	r27
 5d6:	f7 95       	ror	r31
 5d8:	9f 5f       	subi	r25, 0xFF	; 255
 5da:	c9 f7       	brne	.-14     	; 0x5ce <__divsf3_pse+0x78>
 5dc:	88 0f       	add	r24, r24
 5de:	91 1d       	adc	r25, r1
 5e0:	96 95       	lsr	r25
 5e2:	87 95       	ror	r24
 5e4:	97 f9       	bld	r25, 7
 5e6:	08 95       	ret
 5e8:	e1 e0       	ldi	r30, 0x01	; 1
 5ea:	66 0f       	add	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	bb 1f       	adc	r27, r27
 5f2:	62 17       	cp	r22, r18
 5f4:	73 07       	cpc	r23, r19
 5f6:	84 07       	cpc	r24, r20
 5f8:	ba 07       	cpc	r27, r26
 5fa:	20 f0       	brcs	.+8      	; 0x604 <__divsf3_pse+0xae>
 5fc:	62 1b       	sub	r22, r18
 5fe:	73 0b       	sbc	r23, r19
 600:	84 0b       	sbc	r24, r20
 602:	ba 0b       	sbc	r27, r26
 604:	ee 1f       	adc	r30, r30
 606:	88 f7       	brcc	.-30     	; 0x5ea <__divsf3_pse+0x94>
 608:	e0 95       	com	r30
 60a:	08 95       	ret

0000060c <__fixunssfsi>:
 60c:	0e 94 a2 03 	call	0x744	; 0x744 <__fp_splitA>
 610:	88 f0       	brcs	.+34     	; 0x634 <__fixunssfsi+0x28>
 612:	9f 57       	subi	r25, 0x7F	; 127
 614:	98 f0       	brcs	.+38     	; 0x63c <__fixunssfsi+0x30>
 616:	b9 2f       	mov	r27, r25
 618:	99 27       	eor	r25, r25
 61a:	b7 51       	subi	r27, 0x17	; 23
 61c:	b0 f0       	brcs	.+44     	; 0x64a <__fixunssfsi+0x3e>
 61e:	e1 f0       	breq	.+56     	; 0x658 <__fixunssfsi+0x4c>
 620:	66 0f       	add	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	88 1f       	adc	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	1a f0       	brmi	.+6      	; 0x630 <__fixunssfsi+0x24>
 62a:	ba 95       	dec	r27
 62c:	c9 f7       	brne	.-14     	; 0x620 <__fixunssfsi+0x14>
 62e:	14 c0       	rjmp	.+40     	; 0x658 <__fixunssfsi+0x4c>
 630:	b1 30       	cpi	r27, 0x01	; 1
 632:	91 f0       	breq	.+36     	; 0x658 <__fixunssfsi+0x4c>
 634:	0e 94 bc 03 	call	0x778	; 0x778 <__fp_zero>
 638:	b1 e0       	ldi	r27, 0x01	; 1
 63a:	08 95       	ret
 63c:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_zero>
 640:	67 2f       	mov	r22, r23
 642:	78 2f       	mov	r23, r24
 644:	88 27       	eor	r24, r24
 646:	b8 5f       	subi	r27, 0xF8	; 248
 648:	39 f0       	breq	.+14     	; 0x658 <__fixunssfsi+0x4c>
 64a:	b9 3f       	cpi	r27, 0xF9	; 249
 64c:	cc f3       	brlt	.-14     	; 0x640 <__fixunssfsi+0x34>
 64e:	86 95       	lsr	r24
 650:	77 95       	ror	r23
 652:	67 95       	ror	r22
 654:	b3 95       	inc	r27
 656:	d9 f7       	brne	.-10     	; 0x64e <__fixunssfsi+0x42>
 658:	3e f4       	brtc	.+14     	; 0x668 <__fixunssfsi+0x5c>
 65a:	90 95       	com	r25
 65c:	80 95       	com	r24
 65e:	70 95       	com	r23
 660:	61 95       	neg	r22
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	08 95       	ret

0000066a <__floatunsisf>:
 66a:	e8 94       	clt
 66c:	09 c0       	rjmp	.+18     	; 0x680 <__floatsisf+0x12>

0000066e <__floatsisf>:
 66e:	97 fb       	bst	r25, 7
 670:	3e f4       	brtc	.+14     	; 0x680 <__floatsisf+0x12>
 672:	90 95       	com	r25
 674:	80 95       	com	r24
 676:	70 95       	com	r23
 678:	61 95       	neg	r22
 67a:	7f 4f       	sbci	r23, 0xFF	; 255
 67c:	8f 4f       	sbci	r24, 0xFF	; 255
 67e:	9f 4f       	sbci	r25, 0xFF	; 255
 680:	99 23       	and	r25, r25
 682:	a9 f0       	breq	.+42     	; 0x6ae <__floatsisf+0x40>
 684:	f9 2f       	mov	r31, r25
 686:	96 e9       	ldi	r25, 0x96	; 150
 688:	bb 27       	eor	r27, r27
 68a:	93 95       	inc	r25
 68c:	f6 95       	lsr	r31
 68e:	87 95       	ror	r24
 690:	77 95       	ror	r23
 692:	67 95       	ror	r22
 694:	b7 95       	ror	r27
 696:	f1 11       	cpse	r31, r1
 698:	f8 cf       	rjmp	.-16     	; 0x68a <__floatsisf+0x1c>
 69a:	fa f4       	brpl	.+62     	; 0x6da <__floatsisf+0x6c>
 69c:	bb 0f       	add	r27, r27
 69e:	11 f4       	brne	.+4      	; 0x6a4 <__floatsisf+0x36>
 6a0:	60 ff       	sbrs	r22, 0
 6a2:	1b c0       	rjmp	.+54     	; 0x6da <__floatsisf+0x6c>
 6a4:	6f 5f       	subi	r22, 0xFF	; 255
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	16 c0       	rjmp	.+44     	; 0x6da <__floatsisf+0x6c>
 6ae:	88 23       	and	r24, r24
 6b0:	11 f0       	breq	.+4      	; 0x6b6 <__floatsisf+0x48>
 6b2:	96 e9       	ldi	r25, 0x96	; 150
 6b4:	11 c0       	rjmp	.+34     	; 0x6d8 <__floatsisf+0x6a>
 6b6:	77 23       	and	r23, r23
 6b8:	21 f0       	breq	.+8      	; 0x6c2 <__floatsisf+0x54>
 6ba:	9e e8       	ldi	r25, 0x8E	; 142
 6bc:	87 2f       	mov	r24, r23
 6be:	76 2f       	mov	r23, r22
 6c0:	05 c0       	rjmp	.+10     	; 0x6cc <__floatsisf+0x5e>
 6c2:	66 23       	and	r22, r22
 6c4:	71 f0       	breq	.+28     	; 0x6e2 <__floatsisf+0x74>
 6c6:	96 e8       	ldi	r25, 0x86	; 134
 6c8:	86 2f       	mov	r24, r22
 6ca:	70 e0       	ldi	r23, 0x00	; 0
 6cc:	60 e0       	ldi	r22, 0x00	; 0
 6ce:	2a f0       	brmi	.+10     	; 0x6da <__floatsisf+0x6c>
 6d0:	9a 95       	dec	r25
 6d2:	66 0f       	add	r22, r22
 6d4:	77 1f       	adc	r23, r23
 6d6:	88 1f       	adc	r24, r24
 6d8:	da f7       	brpl	.-10     	; 0x6d0 <__floatsisf+0x62>
 6da:	88 0f       	add	r24, r24
 6dc:	96 95       	lsr	r25
 6de:	87 95       	ror	r24
 6e0:	97 f9       	bld	r25, 7
 6e2:	08 95       	ret

000006e4 <__fp_inf>:
 6e4:	97 f9       	bld	r25, 7
 6e6:	9f 67       	ori	r25, 0x7F	; 127
 6e8:	80 e8       	ldi	r24, 0x80	; 128
 6ea:	70 e0       	ldi	r23, 0x00	; 0
 6ec:	60 e0       	ldi	r22, 0x00	; 0
 6ee:	08 95       	ret

000006f0 <__fp_nan>:
 6f0:	9f ef       	ldi	r25, 0xFF	; 255
 6f2:	80 ec       	ldi	r24, 0xC0	; 192
 6f4:	08 95       	ret

000006f6 <__fp_pscA>:
 6f6:	00 24       	eor	r0, r0
 6f8:	0a 94       	dec	r0
 6fa:	16 16       	cp	r1, r22
 6fc:	17 06       	cpc	r1, r23
 6fe:	18 06       	cpc	r1, r24
 700:	09 06       	cpc	r0, r25
 702:	08 95       	ret

00000704 <__fp_pscB>:
 704:	00 24       	eor	r0, r0
 706:	0a 94       	dec	r0
 708:	12 16       	cp	r1, r18
 70a:	13 06       	cpc	r1, r19
 70c:	14 06       	cpc	r1, r20
 70e:	05 06       	cpc	r0, r21
 710:	08 95       	ret

00000712 <__fp_round>:
 712:	09 2e       	mov	r0, r25
 714:	03 94       	inc	r0
 716:	00 0c       	add	r0, r0
 718:	11 f4       	brne	.+4      	; 0x71e <__fp_round+0xc>
 71a:	88 23       	and	r24, r24
 71c:	52 f0       	brmi	.+20     	; 0x732 <__fp_round+0x20>
 71e:	bb 0f       	add	r27, r27
 720:	40 f4       	brcc	.+16     	; 0x732 <__fp_round+0x20>
 722:	bf 2b       	or	r27, r31
 724:	11 f4       	brne	.+4      	; 0x72a <__fp_round+0x18>
 726:	60 ff       	sbrs	r22, 0
 728:	04 c0       	rjmp	.+8      	; 0x732 <__fp_round+0x20>
 72a:	6f 5f       	subi	r22, 0xFF	; 255
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	08 95       	ret

00000734 <__fp_split3>:
 734:	57 fd       	sbrc	r21, 7
 736:	90 58       	subi	r25, 0x80	; 128
 738:	44 0f       	add	r20, r20
 73a:	55 1f       	adc	r21, r21
 73c:	59 f0       	breq	.+22     	; 0x754 <__fp_splitA+0x10>
 73e:	5f 3f       	cpi	r21, 0xFF	; 255
 740:	71 f0       	breq	.+28     	; 0x75e <__fp_splitA+0x1a>
 742:	47 95       	ror	r20

00000744 <__fp_splitA>:
 744:	88 0f       	add	r24, r24
 746:	97 fb       	bst	r25, 7
 748:	99 1f       	adc	r25, r25
 74a:	61 f0       	breq	.+24     	; 0x764 <__fp_splitA+0x20>
 74c:	9f 3f       	cpi	r25, 0xFF	; 255
 74e:	79 f0       	breq	.+30     	; 0x76e <__fp_splitA+0x2a>
 750:	87 95       	ror	r24
 752:	08 95       	ret
 754:	12 16       	cp	r1, r18
 756:	13 06       	cpc	r1, r19
 758:	14 06       	cpc	r1, r20
 75a:	55 1f       	adc	r21, r21
 75c:	f2 cf       	rjmp	.-28     	; 0x742 <__fp_split3+0xe>
 75e:	46 95       	lsr	r20
 760:	f1 df       	rcall	.-30     	; 0x744 <__fp_splitA>
 762:	08 c0       	rjmp	.+16     	; 0x774 <__fp_splitA+0x30>
 764:	16 16       	cp	r1, r22
 766:	17 06       	cpc	r1, r23
 768:	18 06       	cpc	r1, r24
 76a:	99 1f       	adc	r25, r25
 76c:	f1 cf       	rjmp	.-30     	; 0x750 <__fp_splitA+0xc>
 76e:	86 95       	lsr	r24
 770:	71 05       	cpc	r23, r1
 772:	61 05       	cpc	r22, r1
 774:	08 94       	sec
 776:	08 95       	ret

00000778 <__fp_zero>:
 778:	e8 94       	clt

0000077a <__fp_szero>:
 77a:	bb 27       	eor	r27, r27
 77c:	66 27       	eor	r22, r22
 77e:	77 27       	eor	r23, r23
 780:	cb 01       	movw	r24, r22
 782:	97 f9       	bld	r25, 7
 784:	08 95       	ret

00000786 <__mulsf3>:
 786:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__mulsf3x>
 78a:	0c 94 89 03 	jmp	0x712	; 0x712 <__fp_round>
 78e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__fp_pscA>
 792:	38 f0       	brcs	.+14     	; 0x7a2 <__mulsf3+0x1c>
 794:	0e 94 82 03 	call	0x704	; 0x704 <__fp_pscB>
 798:	20 f0       	brcs	.+8      	; 0x7a2 <__mulsf3+0x1c>
 79a:	95 23       	and	r25, r21
 79c:	11 f0       	breq	.+4      	; 0x7a2 <__mulsf3+0x1c>
 79e:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_inf>
 7a2:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <__fp_nan>
 7a6:	11 24       	eor	r1, r1
 7a8:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_szero>

000007ac <__mulsf3x>:
 7ac:	0e 94 9a 03 	call	0x734	; 0x734 <__fp_split3>
 7b0:	70 f3       	brcs	.-36     	; 0x78e <__mulsf3+0x8>

000007b2 <__mulsf3_pse>:
 7b2:	95 9f       	mul	r25, r21
 7b4:	c1 f3       	breq	.-16     	; 0x7a6 <__mulsf3+0x20>
 7b6:	95 0f       	add	r25, r21
 7b8:	50 e0       	ldi	r21, 0x00	; 0
 7ba:	55 1f       	adc	r21, r21
 7bc:	62 9f       	mul	r22, r18
 7be:	f0 01       	movw	r30, r0
 7c0:	72 9f       	mul	r23, r18
 7c2:	bb 27       	eor	r27, r27
 7c4:	f0 0d       	add	r31, r0
 7c6:	b1 1d       	adc	r27, r1
 7c8:	63 9f       	mul	r22, r19
 7ca:	aa 27       	eor	r26, r26
 7cc:	f0 0d       	add	r31, r0
 7ce:	b1 1d       	adc	r27, r1
 7d0:	aa 1f       	adc	r26, r26
 7d2:	64 9f       	mul	r22, r20
 7d4:	66 27       	eor	r22, r22
 7d6:	b0 0d       	add	r27, r0
 7d8:	a1 1d       	adc	r26, r1
 7da:	66 1f       	adc	r22, r22
 7dc:	82 9f       	mul	r24, r18
 7de:	22 27       	eor	r18, r18
 7e0:	b0 0d       	add	r27, r0
 7e2:	a1 1d       	adc	r26, r1
 7e4:	62 1f       	adc	r22, r18
 7e6:	73 9f       	mul	r23, r19
 7e8:	b0 0d       	add	r27, r0
 7ea:	a1 1d       	adc	r26, r1
 7ec:	62 1f       	adc	r22, r18
 7ee:	83 9f       	mul	r24, r19
 7f0:	a0 0d       	add	r26, r0
 7f2:	61 1d       	adc	r22, r1
 7f4:	22 1f       	adc	r18, r18
 7f6:	74 9f       	mul	r23, r20
 7f8:	33 27       	eor	r19, r19
 7fa:	a0 0d       	add	r26, r0
 7fc:	61 1d       	adc	r22, r1
 7fe:	23 1f       	adc	r18, r19
 800:	84 9f       	mul	r24, r20
 802:	60 0d       	add	r22, r0
 804:	21 1d       	adc	r18, r1
 806:	82 2f       	mov	r24, r18
 808:	76 2f       	mov	r23, r22
 80a:	6a 2f       	mov	r22, r26
 80c:	11 24       	eor	r1, r1
 80e:	9f 57       	subi	r25, 0x7F	; 127
 810:	50 40       	sbci	r21, 0x00	; 0
 812:	9a f0       	brmi	.+38     	; 0x83a <__mulsf3_pse+0x88>
 814:	f1 f0       	breq	.+60     	; 0x852 <__mulsf3_pse+0xa0>
 816:	88 23       	and	r24, r24
 818:	4a f0       	brmi	.+18     	; 0x82c <__mulsf3_pse+0x7a>
 81a:	ee 0f       	add	r30, r30
 81c:	ff 1f       	adc	r31, r31
 81e:	bb 1f       	adc	r27, r27
 820:	66 1f       	adc	r22, r22
 822:	77 1f       	adc	r23, r23
 824:	88 1f       	adc	r24, r24
 826:	91 50       	subi	r25, 0x01	; 1
 828:	50 40       	sbci	r21, 0x00	; 0
 82a:	a9 f7       	brne	.-22     	; 0x816 <__mulsf3_pse+0x64>
 82c:	9e 3f       	cpi	r25, 0xFE	; 254
 82e:	51 05       	cpc	r21, r1
 830:	80 f0       	brcs	.+32     	; 0x852 <__mulsf3_pse+0xa0>
 832:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_inf>
 836:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_szero>
 83a:	5f 3f       	cpi	r21, 0xFF	; 255
 83c:	e4 f3       	brlt	.-8      	; 0x836 <__mulsf3_pse+0x84>
 83e:	98 3e       	cpi	r25, 0xE8	; 232
 840:	d4 f3       	brlt	.-12     	; 0x836 <__mulsf3_pse+0x84>
 842:	86 95       	lsr	r24
 844:	77 95       	ror	r23
 846:	67 95       	ror	r22
 848:	b7 95       	ror	r27
 84a:	f7 95       	ror	r31
 84c:	e7 95       	ror	r30
 84e:	9f 5f       	subi	r25, 0xFF	; 255
 850:	c1 f7       	brne	.-16     	; 0x842 <__mulsf3_pse+0x90>
 852:	fe 2b       	or	r31, r30
 854:	88 0f       	add	r24, r24
 856:	91 1d       	adc	r25, r1
 858:	96 95       	lsr	r25
 85a:	87 95       	ror	r24
 85c:	97 f9       	bld	r25, 7
 85e:	08 95       	ret

00000860 <__udivmodsi4>:
 860:	a1 e2       	ldi	r26, 0x21	; 33
 862:	1a 2e       	mov	r1, r26
 864:	aa 1b       	sub	r26, r26
 866:	bb 1b       	sub	r27, r27
 868:	fd 01       	movw	r30, r26
 86a:	0d c0       	rjmp	.+26     	; 0x886 <__udivmodsi4_ep>

0000086c <__udivmodsi4_loop>:
 86c:	aa 1f       	adc	r26, r26
 86e:	bb 1f       	adc	r27, r27
 870:	ee 1f       	adc	r30, r30
 872:	ff 1f       	adc	r31, r31
 874:	a2 17       	cp	r26, r18
 876:	b3 07       	cpc	r27, r19
 878:	e4 07       	cpc	r30, r20
 87a:	f5 07       	cpc	r31, r21
 87c:	20 f0       	brcs	.+8      	; 0x886 <__udivmodsi4_ep>
 87e:	a2 1b       	sub	r26, r18
 880:	b3 0b       	sbc	r27, r19
 882:	e4 0b       	sbc	r30, r20
 884:	f5 0b       	sbc	r31, r21

00000886 <__udivmodsi4_ep>:
 886:	66 1f       	adc	r22, r22
 888:	77 1f       	adc	r23, r23
 88a:	88 1f       	adc	r24, r24
 88c:	99 1f       	adc	r25, r25
 88e:	1a 94       	dec	r1
 890:	69 f7       	brne	.-38     	; 0x86c <__udivmodsi4_loop>
 892:	60 95       	com	r22
 894:	70 95       	com	r23
 896:	80 95       	com	r24
 898:	90 95       	com	r25
 89a:	9b 01       	movw	r18, r22
 89c:	ac 01       	movw	r20, r24
 89e:	bd 01       	movw	r22, r26
 8a0:	cf 01       	movw	r24, r30
 8a2:	08 95       	ret

000008a4 <utoa>:
 8a4:	45 32       	cpi	r20, 0x25	; 37
 8a6:	51 05       	cpc	r21, r1
 8a8:	20 f4       	brcc	.+8      	; 0x8b2 <utoa+0xe>
 8aa:	42 30       	cpi	r20, 0x02	; 2
 8ac:	10 f0       	brcs	.+4      	; 0x8b2 <utoa+0xe>
 8ae:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__utoa_ncheck>
 8b2:	fb 01       	movw	r30, r22
 8b4:	10 82       	st	Z, r1
 8b6:	cb 01       	movw	r24, r22
 8b8:	08 95       	ret

000008ba <__utoa_ncheck>:
 8ba:	bb 27       	eor	r27, r27

000008bc <__utoa_common>:
 8bc:	fb 01       	movw	r30, r22
 8be:	55 27       	eor	r21, r21
 8c0:	aa 27       	eor	r26, r26
 8c2:	88 0f       	add	r24, r24
 8c4:	99 1f       	adc	r25, r25
 8c6:	aa 1f       	adc	r26, r26
 8c8:	a4 17       	cp	r26, r20
 8ca:	10 f0       	brcs	.+4      	; 0x8d0 <__utoa_common+0x14>
 8cc:	a4 1b       	sub	r26, r20
 8ce:	83 95       	inc	r24
 8d0:	50 51       	subi	r21, 0x10	; 16
 8d2:	b9 f7       	brne	.-18     	; 0x8c2 <__utoa_common+0x6>
 8d4:	a0 5d       	subi	r26, 0xD0	; 208
 8d6:	aa 33       	cpi	r26, 0x3A	; 58
 8d8:	08 f0       	brcs	.+2      	; 0x8dc <__utoa_common+0x20>
 8da:	a9 5d       	subi	r26, 0xD9	; 217
 8dc:	a1 93       	st	Z+, r26
 8de:	00 97       	sbiw	r24, 0x00	; 0
 8e0:	79 f7       	brne	.-34     	; 0x8c0 <__utoa_common+0x4>
 8e2:	b1 11       	cpse	r27, r1
 8e4:	b1 93       	st	Z+, r27
 8e6:	11 92       	st	Z+, r1
 8e8:	cb 01       	movw	r24, r22
 8ea:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <strrev>

000008ee <strrev>:
 8ee:	dc 01       	movw	r26, r24
 8f0:	fc 01       	movw	r30, r24
 8f2:	67 2f       	mov	r22, r23
 8f4:	71 91       	ld	r23, Z+
 8f6:	77 23       	and	r23, r23
 8f8:	e1 f7       	brne	.-8      	; 0x8f2 <strrev+0x4>
 8fa:	32 97       	sbiw	r30, 0x02	; 2
 8fc:	04 c0       	rjmp	.+8      	; 0x906 <__stack+0x7>
 8fe:	7c 91       	ld	r23, X
 900:	6d 93       	st	X+, r22
 902:	70 83       	st	Z, r23
 904:	62 91       	ld	r22, -Z
 906:	ae 17       	cp	r26, r30
 908:	bf 07       	cpc	r27, r31
 90a:	c8 f3       	brcs	.-14     	; 0x8fe <strrev+0x10>
 90c:	08 95       	ret

0000090e <_exit>:
 90e:	f8 94       	cli

00000910 <__stop_program>:
 910:	ff cf       	rjmp	.-2      	; 0x910 <__stop_program>
