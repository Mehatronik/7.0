
PWM timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000512  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000049e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000512  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000512  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000544  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000070d  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000064b  00000000  00000000  00000cc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000029d  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  000015ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000381  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  000019b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001a84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <main>
  88:	0c 94 4d 02 	jmp	0x49a	; 0x49a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <AD_C_init>:

void AD_C_init()
{
	
	
	PRR = 0; //power reduction off
  90:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	
	ADMUX |= (1<<REFS0);  //5V referentni napon, ulazni pin A0
  94:	ec e7       	ldi	r30, 0x7C	; 124
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	80 64       	ori	r24, 0x40	; 64
  9c:	80 83       	st	Z, r24
	ADCSRA =0b11101111; //0xFF ;  //ADC enable, auto trigger enable, ADC conv. complete interrupt enable, 128 prescaler
  9e:	8f ee       	ldi	r24, 0xEF	; 239
  a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	
	//ADCL, ADCH(2 zadnja bita),
	
	ADCSRB = 0; //free runniing mode
  a4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
  a8:	08 95       	ret

000000aa <__vector_21>:
}



ISR(ADC_vect)
{
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	2f 93       	push	r18
  b6:	3f 93       	push	r19
  b8:	4f 93       	push	r20
  ba:	5f 93       	push	r21
  bc:	6f 93       	push	r22
  be:	7f 93       	push	r23
  c0:	8f 93       	push	r24
  c2:	9f 93       	push	r25
  c4:	af 93       	push	r26
  c6:	bf 93       	push	r27
  c8:	ef 93       	push	r30
  ca:	ff 93       	push	r31
	//ADCL mora biti prvi procitan
	adc_low = (int)ADCL;    //koriste se dva 8-bit registra jer je rezultat AD konverzije 10-bitan
  cc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <adc_low+0x1>
  d6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <adc_low>
	adc_high = (int)ADCH;
  da:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <adc_high+0x1>
  e4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <adc_high>
	
	/**stapam rezultate iz dva registra u jednu promenljivu na ovaj nacin**/
	if(adc_high==0)
  e8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <adc_high>
  ec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <adc_high+0x1>
  f0:	89 2b       	or	r24, r25
  f2:	49 f4       	brne	.+18     	; 0x106 <__vector_21+0x5c>
	adc_res = adc_low;
  f4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <adc_low>
  f8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <adc_low+0x1>
  fc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 100:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 104:	2f c0       	rjmp	.+94     	; 0x164 <__vector_21+0xba>
	else if(adc_high==1)
 106:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <adc_high>
 10a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <adc_high+0x1>
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	51 f4       	brne	.+20     	; 0x126 <__vector_21+0x7c>
	adc_res = 256 + adc_low;
 112:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <adc_low>
 116:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <adc_low+0x1>
 11a:	93 95       	inc	r25
 11c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 120:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 124:	1f c0       	rjmp	.+62     	; 0x164 <__vector_21+0xba>
	else if(adc_high==2)
 126:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <adc_high>
 12a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <adc_high+0x1>
 12e:	02 97       	sbiw	r24, 0x02	; 2
 130:	51 f4       	brne	.+20     	; 0x146 <__vector_21+0x9c>
	adc_res = 256+256 + adc_low;
 132:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <adc_low>
 136:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <adc_low+0x1>
 13a:	9e 5f       	subi	r25, 0xFE	; 254
 13c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 140:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 144:	0f c0       	rjmp	.+30     	; 0x164 <__vector_21+0xba>
	else if(adc_high==3)
 146:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <adc_high>
 14a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <adc_high+0x1>
 14e:	03 97       	sbiw	r24, 0x03	; 3
 150:	49 f4       	brne	.+18     	; 0x164 <__vector_21+0xba>
	adc_res = 256+256+256 + adc_low;
 152:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <adc_low>
 156:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <adc_low+0x1>
 15a:	9d 5f       	subi	r25, 0xFD	; 253
 15c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 160:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	/*OCR1A = adc_res*5.86;
	OCR1B = OCR1A;*/   //10000 max
	
	//OCR1A = adc_res/0.9765;
	//OCR1B = OCR1A;
	temp = adc_res/3.0;
 164:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 168:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 16c:	07 2e       	mov	r0, r23
 16e:	00 0c       	add	r0, r0
 170:	88 0b       	sbc	r24, r24
 172:	99 0b       	sbc	r25, r25
 174:	0e 94 c1 01 	call	0x382	; 0x382 <__floatsisf>
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	40 e4       	ldi	r20, 0x40	; 64
 17e:	50 e4       	ldi	r21, 0x40	; 64
 180:	0e 94 17 01 	call	0x22e	; 0x22e <__divsf3>
 184:	0e 94 89 01 	call	0x312	; 0x312 <__fixsfsi>
 188:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <temp+0x1>
 18c:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <temp>
	
	OCR1A = temp;
 190:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <temp>
 194:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <temp+0x1>
 198:	e8 e8       	ldi	r30, 0x88	; 136
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	91 83       	std	Z+1, r25	; 0x01
 19e:	80 83       	st	Z, r24
	
	if(OCR1A == 0)
 1a0:	80 81       	ld	r24, Z
 1a2:	91 81       	ldd	r25, Z+1	; 0x01
 1a4:	89 2b       	or	r24, r25
 1a6:	29 f4       	brne	.+10     	; 0x1b2 <__vector_21+0x108>
	{
		OCR1B = 0;
 1a8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1ac:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 1b0:	09 c0       	rjmp	.+18     	; 0x1c4 <__vector_21+0x11a>
	}
	else
	{
		OCR1B = OCR1A+50;  //+100 fora za dead time
 1b2:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1b6:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ba:	c2 96       	adiw	r24, 0x32	; 50
 1bc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1c0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	}
	
}
 1c4:	ff 91       	pop	r31
 1c6:	ef 91       	pop	r30
 1c8:	bf 91       	pop	r27
 1ca:	af 91       	pop	r26
 1cc:	9f 91       	pop	r25
 1ce:	8f 91       	pop	r24
 1d0:	7f 91       	pop	r23
 1d2:	6f 91       	pop	r22
 1d4:	5f 91       	pop	r21
 1d6:	4f 91       	pop	r20
 1d8:	3f 91       	pop	r19
 1da:	2f 91       	pop	r18
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <main>:
	bice konstantno zakucan na 5V.
    */
	
	
	
	    DDRB |= (1 << DDB1)|(1 << DDB2);
 1e6:	84 b1       	in	r24, 0x04	; 4
 1e8:	86 60       	ori	r24, 0x06	; 6
 1ea:	84 b9       	out	0x04, r24	; 4
	    // PB1 and PB2 is now an output

	    ICR1 = 350;    //79 + 1 prescaler = 200kHz
 1ec:	8e e5       	ldi	r24, 0x5E	; 94
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1f4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	    // set TOP to 16bit

	    OCR1A = 40;
 1f8:	e8 e8       	ldi	r30, 0x88	; 136
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	88 e2       	ldi	r24, 0x28	; 40
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	91 83       	std	Z+1, r25	; 0x01
 202:	80 83       	st	Z, r24
	    

	    OCR1B = OCR1A;
 204:	80 81       	ld	r24, Z
 206:	91 81       	ldd	r25, Z+1	; 0x01
 208:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 20c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	    

	    //TCCR1A |= (1 << COM1A1); //|(1 << COM1B1);
		TCCR1A = 0b10110000;
 210:	80 eb       	ldi	r24, 0xB0	; 176
 212:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	    //INVERTING

	    //TCCR1A |= (1 << WGM11);
	    TCCR1B |= (1 << WGM13);
 216:	e1 e8       	ldi	r30, 0x81	; 129
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	80 61       	ori	r24, 0x10	; 16
 21e:	80 83       	st	Z, r24
	    // set Fast PWM mode using ICR1 as TOP
	    
	    TCCR1B |= (1 << CS10);
 220:	80 81       	ld	r24, Z
 222:	81 60       	ori	r24, 0x01	; 1
 224:	80 83       	st	Z, r24
	    // START the timer with no prescaler
		
		AD_C_init();
 226:	0e 94 48 00 	call	0x90	; 0x90 <AD_C_init>
		
		sei();
 22a:	78 94       	sei
 22c:	ff cf       	rjmp	.-2      	; 0x22c <main+0x46>

0000022e <__divsf3>:
 22e:	0e 94 2b 01 	call	0x256	; 0x256 <__divsf3x>
 232:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_round>
 236:	0e 94 0c 02 	call	0x418	; 0x418 <__fp_pscB>
 23a:	58 f0       	brcs	.+22     	; 0x252 <__divsf3+0x24>
 23c:	0e 94 05 02 	call	0x40a	; 0x40a <__fp_pscA>
 240:	40 f0       	brcs	.+16     	; 0x252 <__divsf3+0x24>
 242:	29 f4       	brne	.+10     	; 0x24e <__divsf3+0x20>
 244:	5f 3f       	cpi	r21, 0xFF	; 255
 246:	29 f0       	breq	.+10     	; 0x252 <__divsf3+0x24>
 248:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_inf>
 24c:	51 11       	cpse	r21, r1
 24e:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_szero>
 252:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_nan>

00000256 <__divsf3x>:
 256:	0e 94 24 02 	call	0x448	; 0x448 <__fp_split3>
 25a:	68 f3       	brcs	.-38     	; 0x236 <__divsf3+0x8>

0000025c <__divsf3_pse>:
 25c:	99 23       	and	r25, r25
 25e:	b1 f3       	breq	.-20     	; 0x24c <__divsf3+0x1e>
 260:	55 23       	and	r21, r21
 262:	91 f3       	breq	.-28     	; 0x248 <__divsf3+0x1a>
 264:	95 1b       	sub	r25, r21
 266:	55 0b       	sbc	r21, r21
 268:	bb 27       	eor	r27, r27
 26a:	aa 27       	eor	r26, r26
 26c:	62 17       	cp	r22, r18
 26e:	73 07       	cpc	r23, r19
 270:	84 07       	cpc	r24, r20
 272:	38 f0       	brcs	.+14     	; 0x282 <__divsf3_pse+0x26>
 274:	9f 5f       	subi	r25, 0xFF	; 255
 276:	5f 4f       	sbci	r21, 0xFF	; 255
 278:	22 0f       	add	r18, r18
 27a:	33 1f       	adc	r19, r19
 27c:	44 1f       	adc	r20, r20
 27e:	aa 1f       	adc	r26, r26
 280:	a9 f3       	breq	.-22     	; 0x26c <__divsf3_pse+0x10>
 282:	35 d0       	rcall	.+106    	; 0x2ee <__divsf3_pse+0x92>
 284:	0e 2e       	mov	r0, r30
 286:	3a f0       	brmi	.+14     	; 0x296 <__divsf3_pse+0x3a>
 288:	e0 e8       	ldi	r30, 0x80	; 128
 28a:	32 d0       	rcall	.+100    	; 0x2f0 <__divsf3_pse+0x94>
 28c:	91 50       	subi	r25, 0x01	; 1
 28e:	50 40       	sbci	r21, 0x00	; 0
 290:	e6 95       	lsr	r30
 292:	00 1c       	adc	r0, r0
 294:	ca f7       	brpl	.-14     	; 0x288 <__divsf3_pse+0x2c>
 296:	2b d0       	rcall	.+86     	; 0x2ee <__divsf3_pse+0x92>
 298:	fe 2f       	mov	r31, r30
 29a:	29 d0       	rcall	.+82     	; 0x2ee <__divsf3_pse+0x92>
 29c:	66 0f       	add	r22, r22
 29e:	77 1f       	adc	r23, r23
 2a0:	88 1f       	adc	r24, r24
 2a2:	bb 1f       	adc	r27, r27
 2a4:	26 17       	cp	r18, r22
 2a6:	37 07       	cpc	r19, r23
 2a8:	48 07       	cpc	r20, r24
 2aa:	ab 07       	cpc	r26, r27
 2ac:	b0 e8       	ldi	r27, 0x80	; 128
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <__divsf3_pse+0x56>
 2b0:	bb 0b       	sbc	r27, r27
 2b2:	80 2d       	mov	r24, r0
 2b4:	bf 01       	movw	r22, r30
 2b6:	ff 27       	eor	r31, r31
 2b8:	93 58       	subi	r25, 0x83	; 131
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255
 2bc:	3a f0       	brmi	.+14     	; 0x2cc <__divsf3_pse+0x70>
 2be:	9e 3f       	cpi	r25, 0xFE	; 254
 2c0:	51 05       	cpc	r21, r1
 2c2:	78 f0       	brcs	.+30     	; 0x2e2 <__divsf3_pse+0x86>
 2c4:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_inf>
 2c8:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_szero>
 2cc:	5f 3f       	cpi	r21, 0xFF	; 255
 2ce:	e4 f3       	brlt	.-8      	; 0x2c8 <__divsf3_pse+0x6c>
 2d0:	98 3e       	cpi	r25, 0xE8	; 232
 2d2:	d4 f3       	brlt	.-12     	; 0x2c8 <__divsf3_pse+0x6c>
 2d4:	86 95       	lsr	r24
 2d6:	77 95       	ror	r23
 2d8:	67 95       	ror	r22
 2da:	b7 95       	ror	r27
 2dc:	f7 95       	ror	r31
 2de:	9f 5f       	subi	r25, 0xFF	; 255
 2e0:	c9 f7       	brne	.-14     	; 0x2d4 <__divsf3_pse+0x78>
 2e2:	88 0f       	add	r24, r24
 2e4:	91 1d       	adc	r25, r1
 2e6:	96 95       	lsr	r25
 2e8:	87 95       	ror	r24
 2ea:	97 f9       	bld	r25, 7
 2ec:	08 95       	ret
 2ee:	e1 e0       	ldi	r30, 0x01	; 1
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	bb 1f       	adc	r27, r27
 2f8:	62 17       	cp	r22, r18
 2fa:	73 07       	cpc	r23, r19
 2fc:	84 07       	cpc	r24, r20
 2fe:	ba 07       	cpc	r27, r26
 300:	20 f0       	brcs	.+8      	; 0x30a <__divsf3_pse+0xae>
 302:	62 1b       	sub	r22, r18
 304:	73 0b       	sbc	r23, r19
 306:	84 0b       	sbc	r24, r20
 308:	ba 0b       	sbc	r27, r26
 30a:	ee 1f       	adc	r30, r30
 30c:	88 f7       	brcc	.-30     	; 0x2f0 <__divsf3_pse+0x94>
 30e:	e0 95       	com	r30
 310:	08 95       	ret

00000312 <__fixsfsi>:
 312:	0e 94 90 01 	call	0x320	; 0x320 <__fixunssfsi>
 316:	68 94       	set
 318:	b1 11       	cpse	r27, r1
 31a:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_szero>
 31e:	08 95       	ret

00000320 <__fixunssfsi>:
 320:	0e 94 2c 02 	call	0x458	; 0x458 <__fp_splitA>
 324:	88 f0       	brcs	.+34     	; 0x348 <__fixunssfsi+0x28>
 326:	9f 57       	subi	r25, 0x7F	; 127
 328:	98 f0       	brcs	.+38     	; 0x350 <__fixunssfsi+0x30>
 32a:	b9 2f       	mov	r27, r25
 32c:	99 27       	eor	r25, r25
 32e:	b7 51       	subi	r27, 0x17	; 23
 330:	b0 f0       	brcs	.+44     	; 0x35e <__fixunssfsi+0x3e>
 332:	e1 f0       	breq	.+56     	; 0x36c <__fixunssfsi+0x4c>
 334:	66 0f       	add	r22, r22
 336:	77 1f       	adc	r23, r23
 338:	88 1f       	adc	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	1a f0       	brmi	.+6      	; 0x344 <__fixunssfsi+0x24>
 33e:	ba 95       	dec	r27
 340:	c9 f7       	brne	.-14     	; 0x334 <__fixunssfsi+0x14>
 342:	14 c0       	rjmp	.+40     	; 0x36c <__fixunssfsi+0x4c>
 344:	b1 30       	cpi	r27, 0x01	; 1
 346:	91 f0       	breq	.+36     	; 0x36c <__fixunssfsi+0x4c>
 348:	0e 94 46 02 	call	0x48c	; 0x48c <__fp_zero>
 34c:	b1 e0       	ldi	r27, 0x01	; 1
 34e:	08 95       	ret
 350:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_zero>
 354:	67 2f       	mov	r22, r23
 356:	78 2f       	mov	r23, r24
 358:	88 27       	eor	r24, r24
 35a:	b8 5f       	subi	r27, 0xF8	; 248
 35c:	39 f0       	breq	.+14     	; 0x36c <__fixunssfsi+0x4c>
 35e:	b9 3f       	cpi	r27, 0xF9	; 249
 360:	cc f3       	brlt	.-14     	; 0x354 <__fixunssfsi+0x34>
 362:	86 95       	lsr	r24
 364:	77 95       	ror	r23
 366:	67 95       	ror	r22
 368:	b3 95       	inc	r27
 36a:	d9 f7       	brne	.-10     	; 0x362 <__fixunssfsi+0x42>
 36c:	3e f4       	brtc	.+14     	; 0x37c <__fixunssfsi+0x5c>
 36e:	90 95       	com	r25
 370:	80 95       	com	r24
 372:	70 95       	com	r23
 374:	61 95       	neg	r22
 376:	7f 4f       	sbci	r23, 0xFF	; 255
 378:	8f 4f       	sbci	r24, 0xFF	; 255
 37a:	9f 4f       	sbci	r25, 0xFF	; 255
 37c:	08 95       	ret

0000037e <__floatunsisf>:
 37e:	e8 94       	clt
 380:	09 c0       	rjmp	.+18     	; 0x394 <__floatsisf+0x12>

00000382 <__floatsisf>:
 382:	97 fb       	bst	r25, 7
 384:	3e f4       	brtc	.+14     	; 0x394 <__floatsisf+0x12>
 386:	90 95       	com	r25
 388:	80 95       	com	r24
 38a:	70 95       	com	r23
 38c:	61 95       	neg	r22
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	8f 4f       	sbci	r24, 0xFF	; 255
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	99 23       	and	r25, r25
 396:	a9 f0       	breq	.+42     	; 0x3c2 <__floatsisf+0x40>
 398:	f9 2f       	mov	r31, r25
 39a:	96 e9       	ldi	r25, 0x96	; 150
 39c:	bb 27       	eor	r27, r27
 39e:	93 95       	inc	r25
 3a0:	f6 95       	lsr	r31
 3a2:	87 95       	ror	r24
 3a4:	77 95       	ror	r23
 3a6:	67 95       	ror	r22
 3a8:	b7 95       	ror	r27
 3aa:	f1 11       	cpse	r31, r1
 3ac:	f8 cf       	rjmp	.-16     	; 0x39e <__floatsisf+0x1c>
 3ae:	fa f4       	brpl	.+62     	; 0x3ee <__floatsisf+0x6c>
 3b0:	bb 0f       	add	r27, r27
 3b2:	11 f4       	brne	.+4      	; 0x3b8 <__floatsisf+0x36>
 3b4:	60 ff       	sbrs	r22, 0
 3b6:	1b c0       	rjmp	.+54     	; 0x3ee <__floatsisf+0x6c>
 3b8:	6f 5f       	subi	r22, 0xFF	; 255
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	8f 4f       	sbci	r24, 0xFF	; 255
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	16 c0       	rjmp	.+44     	; 0x3ee <__floatsisf+0x6c>
 3c2:	88 23       	and	r24, r24
 3c4:	11 f0       	breq	.+4      	; 0x3ca <__floatsisf+0x48>
 3c6:	96 e9       	ldi	r25, 0x96	; 150
 3c8:	11 c0       	rjmp	.+34     	; 0x3ec <__floatsisf+0x6a>
 3ca:	77 23       	and	r23, r23
 3cc:	21 f0       	breq	.+8      	; 0x3d6 <__floatsisf+0x54>
 3ce:	9e e8       	ldi	r25, 0x8E	; 142
 3d0:	87 2f       	mov	r24, r23
 3d2:	76 2f       	mov	r23, r22
 3d4:	05 c0       	rjmp	.+10     	; 0x3e0 <__floatsisf+0x5e>
 3d6:	66 23       	and	r22, r22
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <__floatsisf+0x74>
 3da:	96 e8       	ldi	r25, 0x86	; 134
 3dc:	86 2f       	mov	r24, r22
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	60 e0       	ldi	r22, 0x00	; 0
 3e2:	2a f0       	brmi	.+10     	; 0x3ee <__floatsisf+0x6c>
 3e4:	9a 95       	dec	r25
 3e6:	66 0f       	add	r22, r22
 3e8:	77 1f       	adc	r23, r23
 3ea:	88 1f       	adc	r24, r24
 3ec:	da f7       	brpl	.-10     	; 0x3e4 <__floatsisf+0x62>
 3ee:	88 0f       	add	r24, r24
 3f0:	96 95       	lsr	r25
 3f2:	87 95       	ror	r24
 3f4:	97 f9       	bld	r25, 7
 3f6:	08 95       	ret

000003f8 <__fp_inf>:
 3f8:	97 f9       	bld	r25, 7
 3fa:	9f 67       	ori	r25, 0x7F	; 127
 3fc:	80 e8       	ldi	r24, 0x80	; 128
 3fe:	70 e0       	ldi	r23, 0x00	; 0
 400:	60 e0       	ldi	r22, 0x00	; 0
 402:	08 95       	ret

00000404 <__fp_nan>:
 404:	9f ef       	ldi	r25, 0xFF	; 255
 406:	80 ec       	ldi	r24, 0xC0	; 192
 408:	08 95       	ret

0000040a <__fp_pscA>:
 40a:	00 24       	eor	r0, r0
 40c:	0a 94       	dec	r0
 40e:	16 16       	cp	r1, r22
 410:	17 06       	cpc	r1, r23
 412:	18 06       	cpc	r1, r24
 414:	09 06       	cpc	r0, r25
 416:	08 95       	ret

00000418 <__fp_pscB>:
 418:	00 24       	eor	r0, r0
 41a:	0a 94       	dec	r0
 41c:	12 16       	cp	r1, r18
 41e:	13 06       	cpc	r1, r19
 420:	14 06       	cpc	r1, r20
 422:	05 06       	cpc	r0, r21
 424:	08 95       	ret

00000426 <__fp_round>:
 426:	09 2e       	mov	r0, r25
 428:	03 94       	inc	r0
 42a:	00 0c       	add	r0, r0
 42c:	11 f4       	brne	.+4      	; 0x432 <__fp_round+0xc>
 42e:	88 23       	and	r24, r24
 430:	52 f0       	brmi	.+20     	; 0x446 <__fp_round+0x20>
 432:	bb 0f       	add	r27, r27
 434:	40 f4       	brcc	.+16     	; 0x446 <__fp_round+0x20>
 436:	bf 2b       	or	r27, r31
 438:	11 f4       	brne	.+4      	; 0x43e <__fp_round+0x18>
 43a:	60 ff       	sbrs	r22, 0
 43c:	04 c0       	rjmp	.+8      	; 0x446 <__fp_round+0x20>
 43e:	6f 5f       	subi	r22, 0xFF	; 255
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	08 95       	ret

00000448 <__fp_split3>:
 448:	57 fd       	sbrc	r21, 7
 44a:	90 58       	subi	r25, 0x80	; 128
 44c:	44 0f       	add	r20, r20
 44e:	55 1f       	adc	r21, r21
 450:	59 f0       	breq	.+22     	; 0x468 <__fp_splitA+0x10>
 452:	5f 3f       	cpi	r21, 0xFF	; 255
 454:	71 f0       	breq	.+28     	; 0x472 <__fp_splitA+0x1a>
 456:	47 95       	ror	r20

00000458 <__fp_splitA>:
 458:	88 0f       	add	r24, r24
 45a:	97 fb       	bst	r25, 7
 45c:	99 1f       	adc	r25, r25
 45e:	61 f0       	breq	.+24     	; 0x478 <__fp_splitA+0x20>
 460:	9f 3f       	cpi	r25, 0xFF	; 255
 462:	79 f0       	breq	.+30     	; 0x482 <__fp_splitA+0x2a>
 464:	87 95       	ror	r24
 466:	08 95       	ret
 468:	12 16       	cp	r1, r18
 46a:	13 06       	cpc	r1, r19
 46c:	14 06       	cpc	r1, r20
 46e:	55 1f       	adc	r21, r21
 470:	f2 cf       	rjmp	.-28     	; 0x456 <__fp_split3+0xe>
 472:	46 95       	lsr	r20
 474:	f1 df       	rcall	.-30     	; 0x458 <__fp_splitA>
 476:	08 c0       	rjmp	.+16     	; 0x488 <__fp_splitA+0x30>
 478:	16 16       	cp	r1, r22
 47a:	17 06       	cpc	r1, r23
 47c:	18 06       	cpc	r1, r24
 47e:	99 1f       	adc	r25, r25
 480:	f1 cf       	rjmp	.-30     	; 0x464 <__fp_splitA+0xc>
 482:	86 95       	lsr	r24
 484:	71 05       	cpc	r23, r1
 486:	61 05       	cpc	r22, r1
 488:	08 94       	sec
 48a:	08 95       	ret

0000048c <__fp_zero>:
 48c:	e8 94       	clt

0000048e <__fp_szero>:
 48e:	bb 27       	eor	r27, r27
 490:	66 27       	eor	r22, r22
 492:	77 27       	eor	r23, r23
 494:	cb 01       	movw	r24, r22
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret

0000049a <_exit>:
 49a:	f8 94       	cli

0000049c <__stop_program>:
 49c:	ff cf       	rjmp	.-2      	; 0x49c <__stop_program>
