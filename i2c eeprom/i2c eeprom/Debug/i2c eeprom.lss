
i2c eeprom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000008c4  00000958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  0080010a  0080010a  00000962  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000962  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b83  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000084f  00000000  00000000  00001633  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f7  00000000  00000000  00001e82  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  0000257c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044e  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038f  00000000  00000000  00002b1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002ea9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 28 01 	jmp	0x250	; 0x250 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__vector_20>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ec       	ldi	r30, 0xC4	; 196
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 31       	cpi	r26, 0x15	; 21
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a7 00 	call	0x14e	; 0x14e <main>
  9e:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR & (1<<TWINT)));    

    return TWDR;

}
  a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  aa:	88 e4       	ldi	r24, 0x48	; 72
  ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  b0:	08 95       	ret

000000b2 <i2c_start_wait>:
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	ec eb       	ldi	r30, 0xBC	; 188
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	24 ea       	ldi	r18, 0xA4	; 164
  bc:	a9 eb       	ldi	r26, 0xB9	; 185
  be:	b0 e0       	ldi	r27, 0x00	; 0
  c0:	cb eb       	ldi	r28, 0xBB	; 187
  c2:	d0 e0       	ldi	r29, 0x00	; 0
  c4:	34 e8       	ldi	r19, 0x84	; 132
  c6:	44 e9       	ldi	r20, 0x94	; 148
  c8:	20 83       	st	Z, r18
  ca:	90 81       	ld	r25, Z
  cc:	99 23       	and	r25, r25
  ce:	ec f7       	brge	.-6      	; 0xca <i2c_start_wait+0x18>
  d0:	9c 91       	ld	r25, X
  d2:	98 7f       	andi	r25, 0xF8	; 248
  d4:	98 30       	cpi	r25, 0x08	; 8
  d6:	11 f0       	breq	.+4      	; 0xdc <i2c_start_wait+0x2a>
  d8:	90 31       	cpi	r25, 0x10	; 16
  da:	b1 f7       	brne	.-20     	; 0xc8 <i2c_start_wait+0x16>
  dc:	88 83       	st	Y, r24
  de:	30 83       	st	Z, r19
  e0:	90 81       	ld	r25, Z
  e2:	99 23       	and	r25, r25
  e4:	ec f7       	brge	.-6      	; 0xe0 <i2c_start_wait+0x2e>
  e6:	9c 91       	ld	r25, X
  e8:	98 7f       	andi	r25, 0xF8	; 248
  ea:	90 32       	cpi	r25, 0x20	; 32
  ec:	11 f0       	breq	.+4      	; 0xf2 <i2c_start_wait+0x40>
  ee:	98 35       	cpi	r25, 0x58	; 88
  f0:	29 f4       	brne	.+10     	; 0xfc <i2c_start_wait+0x4a>
  f2:	40 83       	st	Z, r20
  f4:	90 81       	ld	r25, Z
  f6:	94 fd       	sbrc	r25, 4
  f8:	fd cf       	rjmp	.-6      	; 0xf4 <i2c_start_wait+0x42>
  fa:	e6 cf       	rjmp	.-52     	; 0xc8 <i2c_start_wait+0x16>
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <i2c_stop>:
 102:	84 e9       	ldi	r24, 0x94	; 148
 104:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 108:	ec eb       	ldi	r30, 0xBC	; 188
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	84 fd       	sbrc	r24, 4
 110:	fd cf       	rjmp	.-6      	; 0x10c <i2c_stop+0xa>
 112:	08 95       	ret

00000114 <i2c_write>:
 114:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 118:	84 e8       	ldi	r24, 0x84	; 132
 11a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 11e:	ec eb       	ldi	r30, 0xBC	; 188
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 23       	and	r24, r24
 126:	ec f7       	brge	.-6      	; 0x122 <i2c_write+0xe>
 128:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 12c:	98 7f       	andi	r25, 0xF8	; 248
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	98 32       	cpi	r25, 0x28	; 40
 132:	09 f4       	brne	.+2      	; 0x136 <i2c_write+0x22>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	08 95       	ret

00000138 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
 138:	84 e8       	ldi	r24, 0x84	; 132
 13a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
 13e:	ec eb       	ldi	r30, 0xBC	; 188
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	88 23       	and	r24, r24
 146:	ec f7       	brge	.-6      	; 0x142 <i2c_readNak+0xa>
	
    return TWDR;
 148:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}
 14c:	08 95       	ret

0000014e <main>:
#define atmel24C08A_adr_page3 0b10100110



int main(void)
{
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	cd b7       	in	r28, 0x3d	; 61
 154:	de b7       	in	r29, 0x3e	; 62
 156:	2f 97       	sbiw	r28, 0x0f	; 15
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	f8 94       	cli
 15c:	de bf       	out	0x3e, r29	; 62
 15e:	0f be       	out	0x3f, r0	; 63
 160:	cd bf       	out	0x3d, r28	; 61
	char bafer[15];
	int i=0;
	int j=0;
	uint8_t adr = atmel24C08A_adr_page0;
	
    i2c_init();                                // init I2C interface
 162:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	uart_init();
 166:	0e 94 53 01 	call	0x2a6	; 0x2a6 <uart_init>
	sei();
 16a:	78 94       	sei
    
	//PB5 = dig13 = led - izlaz
	DDRB |= 1<<PORTB5;
 16c:	25 9a       	sbi	0x04, 5	; 4
 16e:	68 94       	set
 170:	cc 24       	eor	r12, r12
 172:	c2 f8       	bld	r12, 2
 174:	d1 2c       	mov	r13, r1
{
	unsigned char ret;
	char bafer[15];
	int i=0;
	int j=0;
	uint8_t adr = atmel24C08A_adr_page0;
 176:	0f 2e       	mov	r0, r31
 178:	f0 ea       	ldi	r31, 0xA0	; 160
 17a:	ff 2e       	mov	r15, r31
 17c:	f0 2d       	mov	r31, r0
 17e:	17 c0       	rjmp	.+46     	; 0x1ae <main+0x60>
			
		for(j=0; j<256; j++)
		{
			

			i2c_start_wait( adr + I2C_WRITE);	// set device address and write mode, last bit is Read-1, Write-0;
 180:	8f 2d       	mov	r24, r15
 182:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start_wait>
			
			i2c_write(j);                       // ret=0 -> Ok, ret=1 -> no ACK
 186:	80 2f       	mov	r24, r16
 188:	0e 94 8a 00 	call	0x114	; 0x114 <i2c_write>
			i2c_write(255);
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	0e 94 8a 00 	call	0x114	; 0x114 <i2c_write>
			
			i2c_stop();
 192:	0e 94 81 00 	call	0x102	; 0x102 <i2c_stop>
	
	
	for(i=0; i<4; i++)
	{
			
		for(j=0; j<256; j++)
 196:	0f 5f       	subi	r16, 0xFF	; 255
 198:	1f 4f       	sbci	r17, 0xFF	; 255
 19a:	01 15       	cp	r16, r1
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	18 07       	cpc	r17, r24
 1a0:	79 f7       	brne	.-34     	; 0x180 <main+0x32>
			i2c_write(255);
			
			i2c_stop();
		}	
		adr = (adr >> 1) + 1;  //prvo siftujem da bi uvecao page, jer je LSB R/W komanda, a 1 i 2 bit su za adresiranje
		adr = adr << 1;			//potom vratim da bi bilo 8-bit
 1a2:	f3 94       	inc	r15
 1a4:	f3 94       	inc	r15
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	c9 1a       	sub	r12, r25
 1aa:	d1 08       	sbc	r13, r1
	 //i2c_start_wait( atmel24C08A_adr_page0 + I2C_WRITE);       
	 //i2c_write(0x00);

	
	
	for(i=0; i<4; i++)
 1ac:	19 f0       	breq	.+6      	; 0x1b4 <main+0x66>
#define atmel24C08A_adr_page3 0b10100110



int main(void)
{
 1ae:	00 e0       	ldi	r16, 0x00	; 0
 1b0:	10 e0       	ldi	r17, 0x00	; 0
 1b2:	e6 cf       	rjmp	.-52     	; 0x180 <main+0x32>
               
 
	
	
	/* podesim pocetnu adresu za citanje */
	i2c_start_wait( atmel24C08A_adr_page0 + I2C_WRITE);
 1b4:	80 ea       	ldi	r24, 0xA0	; 160
 1b6:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start_wait>
	i2c_write(0x00);										//pocetna adresa = 0
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	0e 94 8a 00 	call	0x114	; 0x114 <i2c_write>
 1c0:	68 94       	set
 1c2:	88 24       	eor	r8, r8
 1c4:	86 f8       	bld	r8, 6
 1c6:	91 2c       	mov	r9, r1
			
			
			
			/* slanje preko uarta */
			//itoa( ret , bafer, 10);
			sprintf(bafer, "%3d", ret);   //presao sam igricu. moze i sprintf umesto itoa. %3d znaci da sam formatirao ispis na minimum 3 mesta, za pregledniji ispis.
 1c8:	0f 2e       	mov	r0, r31
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	ef 2e       	mov	r14, r31
 1ce:	f1 e0       	ldi	r31, 0x01	; 1
 1d0:	ff 2e       	mov	r15, r31
 1d2:	f0 2d       	mov	r31, r0
 1d4:	ce 01       	movw	r24, r28
 1d6:	01 96       	adiw	r24, 0x01	; 1
 1d8:	6c 01       	movw	r12, r24
 1da:	a8 2e       	mov	r10, r24
 1dc:	bd 2c       	mov	r11, r13
 1de:	26 c0       	rjmp	.+76     	; 0x22c <main+0xde>
	/* ispis na terrminal. 64*16 = 1024. Tako ispisujem jer je takva interna organizacija memorije u eepromu */
	for(i=0; i<64; i++)
	{
		for(j=0; j<16; j++)
		{
			i2c_start_wait( atmel24C08A_adr_page0 + I2C_READ);    //citanje
 1e0:	81 ea       	ldi	r24, 0xA1	; 161
 1e2:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_start_wait>
			ret = i2c_readNak();                    // read one byte
 1e6:	0e 94 9c 00 	call	0x138	; 0x138 <i2c_readNak>
			
			
			
			/* slanje preko uarta */
			//itoa( ret , bafer, 10);
			sprintf(bafer, "%3d", ret);   //presao sam igricu. moze i sprintf umesto itoa. %3d znaci da sam formatirao ispis na minimum 3 mesta, za pregledniji ispis.
 1ea:	1f 92       	push	r1
 1ec:	8f 93       	push	r24
 1ee:	ff 92       	push	r15
 1f0:	ef 92       	push	r14
 1f2:	df 92       	push	r13
 1f4:	cf 92       	push	r12
 1f6:	0e 94 76 01 	call	0x2ec	; 0x2ec <sprintf>
			send_str(bafer);
 1fa:	8a 2d       	mov	r24, r10
 1fc:	9b 2d       	mov	r25, r11
 1fe:	0e 94 63 01 	call	0x2c6	; 0x2c6 <send_str>

			send_str("  ");  //razmak
 202:	84 e0       	ldi	r24, 0x04	; 4
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	0e 94 63 01 	call	0x2c6	; 0x2c6 <send_str>
 20a:	01 50       	subi	r16, 0x01	; 1
 20c:	11 09       	sbc	r17, r1
	
	
	/* ispis na terrminal. 64*16 = 1024. Tako ispisujem jer je takva interna organizacija memorije u eepromu */
	for(i=0; i<64; i++)
	{
		for(j=0; j<16; j++)
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	11 f7       	brne	.-60     	; 0x1e0 <main+0x92>
			send_str(bafer);

			send_str("  ");  //razmak
		}
		
		send_str("\n");  //novi red
 21c:	87 e0       	ldi	r24, 0x07	; 7
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 63 01 	call	0x2c6	; 0x2c6 <send_str>
 224:	91 e0       	ldi	r25, 0x01	; 1
 226:	89 1a       	sub	r8, r25
 228:	91 08       	sbc	r9, r1
	i2c_write(0x00);										//pocetna adresa = 0
	
	
	
	/* ispis na terrminal. 64*16 = 1024. Tako ispisujem jer je takva interna organizacija memorije u eepromu */
	for(i=0; i<64; i++)
 22a:	19 f0       	breq	.+6      	; 0x232 <main+0xe4>
{
	unsigned char ret;
	char bafer[15];
	int i=0;
	int j=0;
	uint8_t adr = atmel24C08A_adr_page0;
 22c:	00 e1       	ldi	r16, 0x10	; 16
 22e:	10 e0       	ldi	r17, 0x00	; 0
 230:	d7 cf       	rjmp	.-82     	; 0x1e0 <main+0x92>
		}
		
		send_str("\n");  //novi red
	}
	
	i2c_stop();
 232:	0e 94 81 00 	call	0x102	; 0x102 <i2c_stop>
 236:	ff cf       	rjmp	.-2      	; 0x236 <main+0xe8>

00000238 <__vector_20>:
volatile unsigned char poslato;
volatile unsigned char input_char;
volatile unsigned char input_buffer[INPUT_BUFF_SIZE], buff_size=0;

ISR(USART_TX_vect)
{
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
	poslato=0;
 242:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <poslato>
}
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <__vector_18>:

ISR(USART_RX_vect)
{
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	8f 93       	push	r24
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31
	input_char=UDR0;
 260:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 264:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <input_char>
	
	if (buff_size<INPUT_BUFF_SIZE)
 268:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 26c:	88 30       	cpi	r24, 0x08	; 8
 26e:	98 f4       	brcc	.+38     	; 0x296 <__vector_18+0x46>
	{
		input_buffer[buff_size]=input_char;
 270:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <input_char>
 27a:	e3 5f       	subi	r30, 0xF3	; 243
 27c:	fe 4f       	sbci	r31, 0xFE	; 254
 27e:	80 83       	st	Z, r24
		buff_size++;
 280:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 284:	8f 5f       	subi	r24, 0xFF	; 255
 286:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
		input_buffer[buff_size]='\0';
 28a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	e3 5f       	subi	r30, 0xF3	; 243
 292:	fe 4f       	sbci	r31, 0xFE	; 254
 294:	10 82       	st	Z, r1
	}
}
 296:	ff 91       	pop	r31
 298:	ef 91       	pop	r30
 29a:	8f 91       	pop	r24
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <uart_init>:

void uart_init()
{
	UCSR0A = 0b10;		//dupla brzina slanja
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B = 0b11011000;	//RX complete interupt enable; TX complete interupt enable; Receiver enable; Transmitter enable
 2ac:	88 ed       	ldi	r24, 0xD8	; 216
 2ae:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = 0b110;			//asinhroni rezim, 8-bit, no parity, 1 stop bit
 2b2:	86 e0       	ldi	r24, 0x06	; 6
 2b4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0 = 207;	//Baud 9600 bps
 2b8:	8f ec       	ldi	r24, 0xCF	; 207
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 2c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 2c4:	08 95       	ret

000002c6 <send_str>:
}

void send_str(unsigned char *str)
{
 2c6:	fc 01       	movw	r30, r24
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
 2c8:	90 81       	ld	r25, Z
 2ca:	99 23       	and	r25, r25
 2cc:	71 f0       	breq	.+28     	; 0x2ea <send_str+0x24>
 2ce:	31 96       	adiw	r30, 0x01	; 1
	{
		UDR0=*str;
 2d0:	a6 ec       	ldi	r26, 0xC6	; 198
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
		poslato=1;
 2d4:	81 e0       	ldi	r24, 0x01	; 1
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
	{
		UDR0=*str;
 2d6:	9c 93       	st	X, r25
		poslato=1;
 2d8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <poslato>
		while (poslato);
 2dc:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <poslato>
 2e0:	91 11       	cpse	r25, r1
 2e2:	fc cf       	rjmp	.-8      	; 0x2dc <send_str+0x16>
void send_str(unsigned char *str)
{
	//funkcija za slanje stringova
	
	
	while (*str!='\0')
 2e4:	91 91       	ld	r25, Z+
 2e6:	91 11       	cpse	r25, r1
 2e8:	f6 cf       	rjmp	.-20     	; 0x2d6 <send_str+0x10>
 2ea:	08 95       	ret

000002ec <sprintf>:
 2ec:	ae e0       	ldi	r26, 0x0E	; 14
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	ec e7       	ldi	r30, 0x7C	; 124
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	0c 94 37 04 	jmp	0x86e	; 0x86e <__prologue_saves__+0x1c>
 2f8:	0d 89       	ldd	r16, Y+21	; 0x15
 2fa:	1e 89       	ldd	r17, Y+22	; 0x16
 2fc:	86 e0       	ldi	r24, 0x06	; 6
 2fe:	8c 83       	std	Y+4, r24	; 0x04
 300:	1a 83       	std	Y+2, r17	; 0x02
 302:	09 83       	std	Y+1, r16	; 0x01
 304:	8f ef       	ldi	r24, 0xFF	; 255
 306:	9f e7       	ldi	r25, 0x7F	; 127
 308:	9e 83       	std	Y+6, r25	; 0x06
 30a:	8d 83       	std	Y+5, r24	; 0x05
 30c:	ae 01       	movw	r20, r28
 30e:	47 5e       	subi	r20, 0xE7	; 231
 310:	5f 4f       	sbci	r21, 0xFF	; 255
 312:	6f 89       	ldd	r22, Y+23	; 0x17
 314:	78 8d       	ldd	r23, Y+24	; 0x18
 316:	ce 01       	movw	r24, r28
 318:	01 96       	adiw	r24, 0x01	; 1
 31a:	0e 94 98 01 	call	0x330	; 0x330 <vfprintf>
 31e:	ef 81       	ldd	r30, Y+7	; 0x07
 320:	f8 85       	ldd	r31, Y+8	; 0x08
 322:	e0 0f       	add	r30, r16
 324:	f1 1f       	adc	r31, r17
 326:	10 82       	st	Z, r1
 328:	2e 96       	adiw	r28, 0x0e	; 14
 32a:	e4 e0       	ldi	r30, 0x04	; 4
 32c:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__epilogue_restores__+0x1c>

00000330 <vfprintf>:
 330:	ab e0       	ldi	r26, 0x0B	; 11
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	ee e9       	ldi	r30, 0x9E	; 158
 336:	f1 e0       	ldi	r31, 0x01	; 1
 338:	0c 94 29 04 	jmp	0x852	; 0x852 <__prologue_saves__>
 33c:	6c 01       	movw	r12, r24
 33e:	7b 01       	movw	r14, r22
 340:	8a 01       	movw	r16, r20
 342:	fc 01       	movw	r30, r24
 344:	17 82       	std	Z+7, r1	; 0x07
 346:	16 82       	std	Z+6, r1	; 0x06
 348:	83 81       	ldd	r24, Z+3	; 0x03
 34a:	81 ff       	sbrs	r24, 1
 34c:	cc c1       	rjmp	.+920    	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 34e:	ce 01       	movw	r24, r28
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	3c 01       	movw	r6, r24
 354:	f6 01       	movw	r30, r12
 356:	93 81       	ldd	r25, Z+3	; 0x03
 358:	f7 01       	movw	r30, r14
 35a:	93 fd       	sbrc	r25, 3
 35c:	85 91       	lpm	r24, Z+
 35e:	93 ff       	sbrs	r25, 3
 360:	81 91       	ld	r24, Z+
 362:	7f 01       	movw	r14, r30
 364:	88 23       	and	r24, r24
 366:	09 f4       	brne	.+2      	; 0x36a <vfprintf+0x3a>
 368:	ba c1       	rjmp	.+884    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 36a:	85 32       	cpi	r24, 0x25	; 37
 36c:	39 f4       	brne	.+14     	; 0x37c <vfprintf+0x4c>
 36e:	93 fd       	sbrc	r25, 3
 370:	85 91       	lpm	r24, Z+
 372:	93 ff       	sbrs	r25, 3
 374:	81 91       	ld	r24, Z+
 376:	7f 01       	movw	r14, r30
 378:	85 32       	cpi	r24, 0x25	; 37
 37a:	29 f4       	brne	.+10     	; 0x386 <vfprintf+0x56>
 37c:	b6 01       	movw	r22, r12
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 384:	e7 cf       	rjmp	.-50     	; 0x354 <vfprintf+0x24>
 386:	91 2c       	mov	r9, r1
 388:	21 2c       	mov	r2, r1
 38a:	31 2c       	mov	r3, r1
 38c:	ff e1       	ldi	r31, 0x1F	; 31
 38e:	f3 15       	cp	r31, r3
 390:	d8 f0       	brcs	.+54     	; 0x3c8 <vfprintf+0x98>
 392:	8b 32       	cpi	r24, 0x2B	; 43
 394:	79 f0       	breq	.+30     	; 0x3b4 <vfprintf+0x84>
 396:	38 f4       	brcc	.+14     	; 0x3a6 <vfprintf+0x76>
 398:	80 32       	cpi	r24, 0x20	; 32
 39a:	79 f0       	breq	.+30     	; 0x3ba <vfprintf+0x8a>
 39c:	83 32       	cpi	r24, 0x23	; 35
 39e:	a1 f4       	brne	.+40     	; 0x3c8 <vfprintf+0x98>
 3a0:	23 2d       	mov	r18, r3
 3a2:	20 61       	ori	r18, 0x10	; 16
 3a4:	1d c0       	rjmp	.+58     	; 0x3e0 <vfprintf+0xb0>
 3a6:	8d 32       	cpi	r24, 0x2D	; 45
 3a8:	61 f0       	breq	.+24     	; 0x3c2 <vfprintf+0x92>
 3aa:	80 33       	cpi	r24, 0x30	; 48
 3ac:	69 f4       	brne	.+26     	; 0x3c8 <vfprintf+0x98>
 3ae:	23 2d       	mov	r18, r3
 3b0:	21 60       	ori	r18, 0x01	; 1
 3b2:	16 c0       	rjmp	.+44     	; 0x3e0 <vfprintf+0xb0>
 3b4:	83 2d       	mov	r24, r3
 3b6:	82 60       	ori	r24, 0x02	; 2
 3b8:	38 2e       	mov	r3, r24
 3ba:	e3 2d       	mov	r30, r3
 3bc:	e4 60       	ori	r30, 0x04	; 4
 3be:	3e 2e       	mov	r3, r30
 3c0:	2a c0       	rjmp	.+84     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3c2:	f3 2d       	mov	r31, r3
 3c4:	f8 60       	ori	r31, 0x08	; 8
 3c6:	1d c0       	rjmp	.+58     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c8:	37 fc       	sbrc	r3, 7
 3ca:	2d c0       	rjmp	.+90     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3cc:	20 ed       	ldi	r18, 0xD0	; 208
 3ce:	28 0f       	add	r18, r24
 3d0:	2a 30       	cpi	r18, 0x0A	; 10
 3d2:	40 f0       	brcs	.+16     	; 0x3e4 <vfprintf+0xb4>
 3d4:	8e 32       	cpi	r24, 0x2E	; 46
 3d6:	b9 f4       	brne	.+46     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3d8:	36 fc       	sbrc	r3, 6
 3da:	81 c1       	rjmp	.+770    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 3dc:	23 2d       	mov	r18, r3
 3de:	20 64       	ori	r18, 0x40	; 64
 3e0:	32 2e       	mov	r3, r18
 3e2:	19 c0       	rjmp	.+50     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3e4:	36 fe       	sbrs	r3, 6
 3e6:	06 c0       	rjmp	.+12     	; 0x3f4 <vfprintf+0xc4>
 3e8:	8a e0       	ldi	r24, 0x0A	; 10
 3ea:	98 9e       	mul	r9, r24
 3ec:	20 0d       	add	r18, r0
 3ee:	11 24       	eor	r1, r1
 3f0:	92 2e       	mov	r9, r18
 3f2:	11 c0       	rjmp	.+34     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f4:	ea e0       	ldi	r30, 0x0A	; 10
 3f6:	2e 9e       	mul	r2, r30
 3f8:	20 0d       	add	r18, r0
 3fa:	11 24       	eor	r1, r1
 3fc:	22 2e       	mov	r2, r18
 3fe:	f3 2d       	mov	r31, r3
 400:	f0 62       	ori	r31, 0x20	; 32
 402:	3f 2e       	mov	r3, r31
 404:	08 c0       	rjmp	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 406:	8c 36       	cpi	r24, 0x6C	; 108
 408:	21 f4       	brne	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	83 2d       	mov	r24, r3
 40c:	80 68       	ori	r24, 0x80	; 128
 40e:	38 2e       	mov	r3, r24
 410:	02 c0       	rjmp	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	88 36       	cpi	r24, 0x68	; 104
 414:	41 f4       	brne	.+16     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 416:	f7 01       	movw	r30, r14
 418:	93 fd       	sbrc	r25, 3
 41a:	85 91       	lpm	r24, Z+
 41c:	93 ff       	sbrs	r25, 3
 41e:	81 91       	ld	r24, Z+
 420:	7f 01       	movw	r14, r30
 422:	81 11       	cpse	r24, r1
 424:	b3 cf       	rjmp	.-154    	; 0x38c <vfprintf+0x5c>
 426:	98 2f       	mov	r25, r24
 428:	9f 7d       	andi	r25, 0xDF	; 223
 42a:	95 54       	subi	r25, 0x45	; 69
 42c:	93 30       	cpi	r25, 0x03	; 3
 42e:	28 f4       	brcc	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	0c 5f       	subi	r16, 0xFC	; 252
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	9f e3       	ldi	r25, 0x3F	; 63
 436:	99 83       	std	Y+1, r25	; 0x01
 438:	0d c0       	rjmp	.+26     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 43a:	83 36       	cpi	r24, 0x63	; 99
 43c:	31 f0       	breq	.+12     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43e:	83 37       	cpi	r24, 0x73	; 115
 440:	71 f0       	breq	.+28     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 442:	83 35       	cpi	r24, 0x53	; 83
 444:	09 f0       	breq	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 446:	59 c0       	rjmp	.+178    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 448:	21 c0       	rjmp	.+66     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 44a:	f8 01       	movw	r30, r16
 44c:	80 81       	ld	r24, Z
 44e:	89 83       	std	Y+1, r24	; 0x01
 450:	0e 5f       	subi	r16, 0xFE	; 254
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	88 24       	eor	r8, r8
 456:	83 94       	inc	r8
 458:	91 2c       	mov	r9, r1
 45a:	53 01       	movw	r10, r6
 45c:	13 c0       	rjmp	.+38     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 45e:	28 01       	movw	r4, r16
 460:	f2 e0       	ldi	r31, 0x02	; 2
 462:	4f 0e       	add	r4, r31
 464:	51 1c       	adc	r5, r1
 466:	f8 01       	movw	r30, r16
 468:	a0 80       	ld	r10, Z
 46a:	b1 80       	ldd	r11, Z+1	; 0x01
 46c:	36 fe       	sbrs	r3, 6
 46e:	03 c0       	rjmp	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 470:	69 2d       	mov	r22, r9
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	6f ef       	ldi	r22, 0xFF	; 255
 478:	7f ef       	ldi	r23, 0xFF	; 255
 47a:	c5 01       	movw	r24, r10
 47c:	0e 94 84 03 	call	0x708	; 0x708 <strnlen>
 480:	4c 01       	movw	r8, r24
 482:	82 01       	movw	r16, r4
 484:	f3 2d       	mov	r31, r3
 486:	ff 77       	andi	r31, 0x7F	; 127
 488:	3f 2e       	mov	r3, r31
 48a:	16 c0       	rjmp	.+44     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 48c:	28 01       	movw	r4, r16
 48e:	22 e0       	ldi	r18, 0x02	; 2
 490:	42 0e       	add	r4, r18
 492:	51 1c       	adc	r5, r1
 494:	f8 01       	movw	r30, r16
 496:	a0 80       	ld	r10, Z
 498:	b1 80       	ldd	r11, Z+1	; 0x01
 49a:	36 fe       	sbrs	r3, 6
 49c:	03 c0       	rjmp	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49e:	69 2d       	mov	r22, r9
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	6f ef       	ldi	r22, 0xFF	; 255
 4a6:	7f ef       	ldi	r23, 0xFF	; 255
 4a8:	c5 01       	movw	r24, r10
 4aa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <strnlen_P>
 4ae:	4c 01       	movw	r8, r24
 4b0:	f3 2d       	mov	r31, r3
 4b2:	f0 68       	ori	r31, 0x80	; 128
 4b4:	3f 2e       	mov	r3, r31
 4b6:	82 01       	movw	r16, r4
 4b8:	33 fc       	sbrc	r3, 3
 4ba:	1b c0       	rjmp	.+54     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4bc:	82 2d       	mov	r24, r2
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	88 16       	cp	r8, r24
 4c2:	99 06       	cpc	r9, r25
 4c4:	b0 f4       	brcc	.+44     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4c6:	b6 01       	movw	r22, r12
 4c8:	80 e2       	ldi	r24, 0x20	; 32
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 4d0:	2a 94       	dec	r2
 4d2:	f4 cf       	rjmp	.-24     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4d4:	f5 01       	movw	r30, r10
 4d6:	37 fc       	sbrc	r3, 7
 4d8:	85 91       	lpm	r24, Z+
 4da:	37 fe       	sbrs	r3, 7
 4dc:	81 91       	ld	r24, Z+
 4de:	5f 01       	movw	r10, r30
 4e0:	b6 01       	movw	r22, r12
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 4e8:	21 10       	cpse	r2, r1
 4ea:	2a 94       	dec	r2
 4ec:	21 e0       	ldi	r18, 0x01	; 1
 4ee:	82 1a       	sub	r8, r18
 4f0:	91 08       	sbc	r9, r1
 4f2:	81 14       	cp	r8, r1
 4f4:	91 04       	cpc	r9, r1
 4f6:	71 f7       	brne	.-36     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4f8:	e8 c0       	rjmp	.+464    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 4fa:	84 36       	cpi	r24, 0x64	; 100
 4fc:	11 f0       	breq	.+4      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fe:	89 36       	cpi	r24, 0x69	; 105
 500:	41 f5       	brne	.+80     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 502:	f8 01       	movw	r30, r16
 504:	37 fe       	sbrs	r3, 7
 506:	07 c0       	rjmp	.+14     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 508:	60 81       	ld	r22, Z
 50a:	71 81       	ldd	r23, Z+1	; 0x01
 50c:	82 81       	ldd	r24, Z+2	; 0x02
 50e:	93 81       	ldd	r25, Z+3	; 0x03
 510:	0c 5f       	subi	r16, 0xFC	; 252
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	08 c0       	rjmp	.+16     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 516:	60 81       	ld	r22, Z
 518:	71 81       	ldd	r23, Z+1	; 0x01
 51a:	07 2e       	mov	r0, r23
 51c:	00 0c       	add	r0, r0
 51e:	88 0b       	sbc	r24, r24
 520:	99 0b       	sbc	r25, r25
 522:	0e 5f       	subi	r16, 0xFE	; 254
 524:	1f 4f       	sbci	r17, 0xFF	; 255
 526:	f3 2d       	mov	r31, r3
 528:	ff 76       	andi	r31, 0x6F	; 111
 52a:	3f 2e       	mov	r3, r31
 52c:	97 ff       	sbrs	r25, 7
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 530:	90 95       	com	r25
 532:	80 95       	com	r24
 534:	70 95       	com	r23
 536:	61 95       	neg	r22
 538:	7f 4f       	sbci	r23, 0xFF	; 255
 53a:	8f 4f       	sbci	r24, 0xFF	; 255
 53c:	9f 4f       	sbci	r25, 0xFF	; 255
 53e:	f0 68       	ori	r31, 0x80	; 128
 540:	3f 2e       	mov	r3, r31
 542:	2a e0       	ldi	r18, 0x0A	; 10
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	a3 01       	movw	r20, r6
 548:	0e 94 cb 03 	call	0x796	; 0x796 <__ultoa_invert>
 54c:	88 2e       	mov	r8, r24
 54e:	86 18       	sub	r8, r6
 550:	45 c0       	rjmp	.+138    	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 552:	85 37       	cpi	r24, 0x75	; 117
 554:	31 f4       	brne	.+12     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 556:	23 2d       	mov	r18, r3
 558:	2f 7e       	andi	r18, 0xEF	; 239
 55a:	b2 2e       	mov	r11, r18
 55c:	2a e0       	ldi	r18, 0x0A	; 10
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	25 c0       	rjmp	.+74     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 562:	93 2d       	mov	r25, r3
 564:	99 7f       	andi	r25, 0xF9	; 249
 566:	b9 2e       	mov	r11, r25
 568:	8f 36       	cpi	r24, 0x6F	; 111
 56a:	c1 f0       	breq	.+48     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 56c:	18 f4       	brcc	.+6      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 56e:	88 35       	cpi	r24, 0x58	; 88
 570:	79 f0       	breq	.+30     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 572:	b5 c0       	rjmp	.+362    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 574:	80 37       	cpi	r24, 0x70	; 112
 576:	19 f0       	breq	.+6      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 578:	88 37       	cpi	r24, 0x78	; 120
 57a:	21 f0       	breq	.+8      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 57c:	b0 c0       	rjmp	.+352    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 57e:	e9 2f       	mov	r30, r25
 580:	e0 61       	ori	r30, 0x10	; 16
 582:	be 2e       	mov	r11, r30
 584:	b4 fe       	sbrs	r11, 4
 586:	0d c0       	rjmp	.+26     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 588:	fb 2d       	mov	r31, r11
 58a:	f4 60       	ori	r31, 0x04	; 4
 58c:	bf 2e       	mov	r11, r31
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 590:	34 fe       	sbrs	r3, 4
 592:	0a c0       	rjmp	.+20     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 594:	29 2f       	mov	r18, r25
 596:	26 60       	ori	r18, 0x06	; 6
 598:	b2 2e       	mov	r11, r18
 59a:	06 c0       	rjmp	.+12     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 59c:	28 e0       	ldi	r18, 0x08	; 8
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a2:	20 e1       	ldi	r18, 0x10	; 16
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a8:	20 e1       	ldi	r18, 0x10	; 16
 5aa:	32 e0       	ldi	r19, 0x02	; 2
 5ac:	f8 01       	movw	r30, r16
 5ae:	b7 fe       	sbrs	r11, 7
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b2:	60 81       	ld	r22, Z
 5b4:	71 81       	ldd	r23, Z+1	; 0x01
 5b6:	82 81       	ldd	r24, Z+2	; 0x02
 5b8:	93 81       	ldd	r25, Z+3	; 0x03
 5ba:	0c 5f       	subi	r16, 0xFC	; 252
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c0:	60 81       	ld	r22, Z
 5c2:	71 81       	ldd	r23, Z+1	; 0x01
 5c4:	80 e0       	ldi	r24, 0x00	; 0
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 5f       	subi	r16, 0xFE	; 254
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	a3 01       	movw	r20, r6
 5ce:	0e 94 cb 03 	call	0x796	; 0x796 <__ultoa_invert>
 5d2:	88 2e       	mov	r8, r24
 5d4:	86 18       	sub	r8, r6
 5d6:	fb 2d       	mov	r31, r11
 5d8:	ff 77       	andi	r31, 0x7F	; 127
 5da:	3f 2e       	mov	r3, r31
 5dc:	36 fe       	sbrs	r3, 6
 5de:	0d c0       	rjmp	.+26     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e0:	23 2d       	mov	r18, r3
 5e2:	2e 7f       	andi	r18, 0xFE	; 254
 5e4:	a2 2e       	mov	r10, r18
 5e6:	89 14       	cp	r8, r9
 5e8:	58 f4       	brcc	.+22     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5ea:	34 fe       	sbrs	r3, 4
 5ec:	0b c0       	rjmp	.+22     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ee:	32 fc       	sbrc	r3, 2
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f2:	83 2d       	mov	r24, r3
 5f4:	8e 7e       	andi	r24, 0xEE	; 238
 5f6:	a8 2e       	mov	r10, r24
 5f8:	05 c0       	rjmp	.+10     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fa:	b8 2c       	mov	r11, r8
 5fc:	a3 2c       	mov	r10, r3
 5fe:	03 c0       	rjmp	.+6      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 600:	b8 2c       	mov	r11, r8
 602:	01 c0       	rjmp	.+2      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 604:	b9 2c       	mov	r11, r9
 606:	a4 fe       	sbrs	r10, 4
 608:	0f c0       	rjmp	.+30     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 60a:	fe 01       	movw	r30, r28
 60c:	e8 0d       	add	r30, r8
 60e:	f1 1d       	adc	r31, r1
 610:	80 81       	ld	r24, Z
 612:	80 33       	cpi	r24, 0x30	; 48
 614:	21 f4       	brne	.+8      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 616:	9a 2d       	mov	r25, r10
 618:	99 7e       	andi	r25, 0xE9	; 233
 61a:	a9 2e       	mov	r10, r25
 61c:	09 c0       	rjmp	.+18     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 61e:	a2 fe       	sbrs	r10, 2
 620:	06 c0       	rjmp	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	b3 94       	inc	r11
 624:	b3 94       	inc	r11
 626:	04 c0       	rjmp	.+8      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 628:	8a 2d       	mov	r24, r10
 62a:	86 78       	andi	r24, 0x86	; 134
 62c:	09 f0       	breq	.+2      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62e:	b3 94       	inc	r11
 630:	a3 fc       	sbrc	r10, 3
 632:	11 c0       	rjmp	.+34     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 634:	a0 fe       	sbrs	r10, 0
 636:	06 c0       	rjmp	.+12     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 638:	b2 14       	cp	r11, r2
 63a:	88 f4       	brcc	.+34     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 63c:	28 0c       	add	r2, r8
 63e:	92 2c       	mov	r9, r2
 640:	9b 18       	sub	r9, r11
 642:	0e c0       	rjmp	.+28     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 644:	b2 14       	cp	r11, r2
 646:	60 f4       	brcc	.+24     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 648:	b6 01       	movw	r22, r12
 64a:	80 e2       	ldi	r24, 0x20	; 32
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 652:	b3 94       	inc	r11
 654:	f7 cf       	rjmp	.-18     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 656:	b2 14       	cp	r11, r2
 658:	18 f4       	brcc	.+6      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65a:	2b 18       	sub	r2, r11
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65e:	98 2c       	mov	r9, r8
 660:	21 2c       	mov	r2, r1
 662:	a4 fe       	sbrs	r10, 4
 664:	10 c0       	rjmp	.+32     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 666:	b6 01       	movw	r22, r12
 668:	80 e3       	ldi	r24, 0x30	; 48
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 670:	a2 fe       	sbrs	r10, 2
 672:	17 c0       	rjmp	.+46     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 674:	a1 fc       	sbrc	r10, 1
 676:	03 c0       	rjmp	.+6      	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 678:	88 e7       	ldi	r24, 0x78	; 120
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 67e:	88 e5       	ldi	r24, 0x58	; 88
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	b6 01       	movw	r22, r12
 684:	0c c0       	rjmp	.+24     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 686:	8a 2d       	mov	r24, r10
 688:	86 78       	andi	r24, 0x86	; 134
 68a:	59 f0       	breq	.+22     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 68c:	a1 fe       	sbrs	r10, 1
 68e:	02 c0       	rjmp	.+4      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 690:	8b e2       	ldi	r24, 0x2B	; 43
 692:	01 c0       	rjmp	.+2      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	a7 fc       	sbrc	r10, 7
 698:	8d e2       	ldi	r24, 0x2D	; 45
 69a:	b6 01       	movw	r22, r12
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 6a2:	89 14       	cp	r8, r9
 6a4:	38 f4       	brcc	.+14     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6a6:	b6 01       	movw	r22, r12
 6a8:	80 e3       	ldi	r24, 0x30	; 48
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 6b0:	9a 94       	dec	r9
 6b2:	f7 cf       	rjmp	.-18     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 6b4:	8a 94       	dec	r8
 6b6:	f3 01       	movw	r30, r6
 6b8:	e8 0d       	add	r30, r8
 6ba:	f1 1d       	adc	r31, r1
 6bc:	80 81       	ld	r24, Z
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 6c6:	81 10       	cpse	r8, r1
 6c8:	f5 cf       	rjmp	.-22     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6ca:	22 20       	and	r2, r2
 6cc:	09 f4       	brne	.+2      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ce:	42 ce       	rjmp	.-892    	; 0x354 <vfprintf+0x24>
 6d0:	b6 01       	movw	r22, r12
 6d2:	80 e2       	ldi	r24, 0x20	; 32
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 8f 03 	call	0x71e	; 0x71e <fputc>
 6da:	2a 94       	dec	r2
 6dc:	f6 cf       	rjmp	.-20     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6de:	f6 01       	movw	r30, r12
 6e0:	86 81       	ldd	r24, Z+6	; 0x06
 6e2:	97 81       	ldd	r25, Z+7	; 0x07
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e6:	8f ef       	ldi	r24, 0xFF	; 255
 6e8:	9f ef       	ldi	r25, 0xFF	; 255
 6ea:	2b 96       	adiw	r28, 0x0b	; 11
 6ec:	e2 e1       	ldi	r30, 0x12	; 18
 6ee:	0c 94 45 04 	jmp	0x88a	; 0x88a <__epilogue_restores__>

000006f2 <strnlen_P>:
 6f2:	fc 01       	movw	r30, r24
 6f4:	05 90       	lpm	r0, Z+
 6f6:	61 50       	subi	r22, 0x01	; 1
 6f8:	70 40       	sbci	r23, 0x00	; 0
 6fa:	01 10       	cpse	r0, r1
 6fc:	d8 f7       	brcc	.-10     	; 0x6f4 <strnlen_P+0x2>
 6fe:	80 95       	com	r24
 700:	90 95       	com	r25
 702:	8e 0f       	add	r24, r30
 704:	9f 1f       	adc	r25, r31
 706:	08 95       	ret

00000708 <strnlen>:
 708:	fc 01       	movw	r30, r24
 70a:	61 50       	subi	r22, 0x01	; 1
 70c:	70 40       	sbci	r23, 0x00	; 0
 70e:	01 90       	ld	r0, Z+
 710:	01 10       	cpse	r0, r1
 712:	d8 f7       	brcc	.-10     	; 0x70a <strnlen+0x2>
 714:	80 95       	com	r24
 716:	90 95       	com	r25
 718:	8e 0f       	add	r24, r30
 71a:	9f 1f       	adc	r25, r31
 71c:	08 95       	ret

0000071e <fputc>:
 71e:	0f 93       	push	r16
 720:	1f 93       	push	r17
 722:	cf 93       	push	r28
 724:	df 93       	push	r29
 726:	fb 01       	movw	r30, r22
 728:	23 81       	ldd	r18, Z+3	; 0x03
 72a:	21 fd       	sbrc	r18, 1
 72c:	03 c0       	rjmp	.+6      	; 0x734 <fputc+0x16>
 72e:	8f ef       	ldi	r24, 0xFF	; 255
 730:	9f ef       	ldi	r25, 0xFF	; 255
 732:	2c c0       	rjmp	.+88     	; 0x78c <fputc+0x6e>
 734:	22 ff       	sbrs	r18, 2
 736:	16 c0       	rjmp	.+44     	; 0x764 <fputc+0x46>
 738:	46 81       	ldd	r20, Z+6	; 0x06
 73a:	57 81       	ldd	r21, Z+7	; 0x07
 73c:	24 81       	ldd	r18, Z+4	; 0x04
 73e:	35 81       	ldd	r19, Z+5	; 0x05
 740:	42 17       	cp	r20, r18
 742:	53 07       	cpc	r21, r19
 744:	44 f4       	brge	.+16     	; 0x756 <fputc+0x38>
 746:	a0 81       	ld	r26, Z
 748:	b1 81       	ldd	r27, Z+1	; 0x01
 74a:	9d 01       	movw	r18, r26
 74c:	2f 5f       	subi	r18, 0xFF	; 255
 74e:	3f 4f       	sbci	r19, 0xFF	; 255
 750:	31 83       	std	Z+1, r19	; 0x01
 752:	20 83       	st	Z, r18
 754:	8c 93       	st	X, r24
 756:	26 81       	ldd	r18, Z+6	; 0x06
 758:	37 81       	ldd	r19, Z+7	; 0x07
 75a:	2f 5f       	subi	r18, 0xFF	; 255
 75c:	3f 4f       	sbci	r19, 0xFF	; 255
 75e:	37 83       	std	Z+7, r19	; 0x07
 760:	26 83       	std	Z+6, r18	; 0x06
 762:	14 c0       	rjmp	.+40     	; 0x78c <fputc+0x6e>
 764:	8b 01       	movw	r16, r22
 766:	ec 01       	movw	r28, r24
 768:	fb 01       	movw	r30, r22
 76a:	00 84       	ldd	r0, Z+8	; 0x08
 76c:	f1 85       	ldd	r31, Z+9	; 0x09
 76e:	e0 2d       	mov	r30, r0
 770:	09 95       	icall
 772:	89 2b       	or	r24, r25
 774:	e1 f6       	brne	.-72     	; 0x72e <fputc+0x10>
 776:	d8 01       	movw	r26, r16
 778:	16 96       	adiw	r26, 0x06	; 6
 77a:	8d 91       	ld	r24, X+
 77c:	9c 91       	ld	r25, X
 77e:	17 97       	sbiw	r26, 0x07	; 7
 780:	01 96       	adiw	r24, 0x01	; 1
 782:	17 96       	adiw	r26, 0x07	; 7
 784:	9c 93       	st	X, r25
 786:	8e 93       	st	-X, r24
 788:	16 97       	sbiw	r26, 0x06	; 6
 78a:	ce 01       	movw	r24, r28
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	1f 91       	pop	r17
 792:	0f 91       	pop	r16
 794:	08 95       	ret

00000796 <__ultoa_invert>:
 796:	fa 01       	movw	r30, r20
 798:	aa 27       	eor	r26, r26
 79a:	28 30       	cpi	r18, 0x08	; 8
 79c:	51 f1       	breq	.+84     	; 0x7f2 <__ultoa_invert+0x5c>
 79e:	20 31       	cpi	r18, 0x10	; 16
 7a0:	81 f1       	breq	.+96     	; 0x802 <__ultoa_invert+0x6c>
 7a2:	e8 94       	clt
 7a4:	6f 93       	push	r22
 7a6:	6e 7f       	andi	r22, 0xFE	; 254
 7a8:	6e 5f       	subi	r22, 0xFE	; 254
 7aa:	7f 4f       	sbci	r23, 0xFF	; 255
 7ac:	8f 4f       	sbci	r24, 0xFF	; 255
 7ae:	9f 4f       	sbci	r25, 0xFF	; 255
 7b0:	af 4f       	sbci	r26, 0xFF	; 255
 7b2:	b1 e0       	ldi	r27, 0x01	; 1
 7b4:	3e d0       	rcall	.+124    	; 0x832 <__ultoa_invert+0x9c>
 7b6:	b4 e0       	ldi	r27, 0x04	; 4
 7b8:	3c d0       	rcall	.+120    	; 0x832 <__ultoa_invert+0x9c>
 7ba:	67 0f       	add	r22, r23
 7bc:	78 1f       	adc	r23, r24
 7be:	89 1f       	adc	r24, r25
 7c0:	9a 1f       	adc	r25, r26
 7c2:	a1 1d       	adc	r26, r1
 7c4:	68 0f       	add	r22, r24
 7c6:	79 1f       	adc	r23, r25
 7c8:	8a 1f       	adc	r24, r26
 7ca:	91 1d       	adc	r25, r1
 7cc:	a1 1d       	adc	r26, r1
 7ce:	6a 0f       	add	r22, r26
 7d0:	71 1d       	adc	r23, r1
 7d2:	81 1d       	adc	r24, r1
 7d4:	91 1d       	adc	r25, r1
 7d6:	a1 1d       	adc	r26, r1
 7d8:	20 d0       	rcall	.+64     	; 0x81a <__ultoa_invert+0x84>
 7da:	09 f4       	brne	.+2      	; 0x7de <__ultoa_invert+0x48>
 7dc:	68 94       	set
 7de:	3f 91       	pop	r19
 7e0:	2a e0       	ldi	r18, 0x0A	; 10
 7e2:	26 9f       	mul	r18, r22
 7e4:	11 24       	eor	r1, r1
 7e6:	30 19       	sub	r19, r0
 7e8:	30 5d       	subi	r19, 0xD0	; 208
 7ea:	31 93       	st	Z+, r19
 7ec:	de f6       	brtc	.-74     	; 0x7a4 <__ultoa_invert+0xe>
 7ee:	cf 01       	movw	r24, r30
 7f0:	08 95       	ret
 7f2:	46 2f       	mov	r20, r22
 7f4:	47 70       	andi	r20, 0x07	; 7
 7f6:	40 5d       	subi	r20, 0xD0	; 208
 7f8:	41 93       	st	Z+, r20
 7fa:	b3 e0       	ldi	r27, 0x03	; 3
 7fc:	0f d0       	rcall	.+30     	; 0x81c <__ultoa_invert+0x86>
 7fe:	c9 f7       	brne	.-14     	; 0x7f2 <__ultoa_invert+0x5c>
 800:	f6 cf       	rjmp	.-20     	; 0x7ee <__ultoa_invert+0x58>
 802:	46 2f       	mov	r20, r22
 804:	4f 70       	andi	r20, 0x0F	; 15
 806:	40 5d       	subi	r20, 0xD0	; 208
 808:	4a 33       	cpi	r20, 0x3A	; 58
 80a:	18 f0       	brcs	.+6      	; 0x812 <__ultoa_invert+0x7c>
 80c:	49 5d       	subi	r20, 0xD9	; 217
 80e:	31 fd       	sbrc	r19, 1
 810:	40 52       	subi	r20, 0x20	; 32
 812:	41 93       	st	Z+, r20
 814:	02 d0       	rcall	.+4      	; 0x81a <__ultoa_invert+0x84>
 816:	a9 f7       	brne	.-22     	; 0x802 <__ultoa_invert+0x6c>
 818:	ea cf       	rjmp	.-44     	; 0x7ee <__ultoa_invert+0x58>
 81a:	b4 e0       	ldi	r27, 0x04	; 4
 81c:	a6 95       	lsr	r26
 81e:	97 95       	ror	r25
 820:	87 95       	ror	r24
 822:	77 95       	ror	r23
 824:	67 95       	ror	r22
 826:	ba 95       	dec	r27
 828:	c9 f7       	brne	.-14     	; 0x81c <__ultoa_invert+0x86>
 82a:	00 97       	sbiw	r24, 0x00	; 0
 82c:	61 05       	cpc	r22, r1
 82e:	71 05       	cpc	r23, r1
 830:	08 95       	ret
 832:	9b 01       	movw	r18, r22
 834:	ac 01       	movw	r20, r24
 836:	0a 2e       	mov	r0, r26
 838:	06 94       	lsr	r0
 83a:	57 95       	ror	r21
 83c:	47 95       	ror	r20
 83e:	37 95       	ror	r19
 840:	27 95       	ror	r18
 842:	ba 95       	dec	r27
 844:	c9 f7       	brne	.-14     	; 0x838 <__ultoa_invert+0xa2>
 846:	62 0f       	add	r22, r18
 848:	73 1f       	adc	r23, r19
 84a:	84 1f       	adc	r24, r20
 84c:	95 1f       	adc	r25, r21
 84e:	a0 1d       	adc	r26, r0
 850:	08 95       	ret

00000852 <__prologue_saves__>:
 852:	2f 92       	push	r2
 854:	3f 92       	push	r3
 856:	4f 92       	push	r4
 858:	5f 92       	push	r5
 85a:	6f 92       	push	r6
 85c:	7f 92       	push	r7
 85e:	8f 92       	push	r8
 860:	9f 92       	push	r9
 862:	af 92       	push	r10
 864:	bf 92       	push	r11
 866:	cf 92       	push	r12
 868:	df 92       	push	r13
 86a:	ef 92       	push	r14
 86c:	ff 92       	push	r15
 86e:	0f 93       	push	r16
 870:	1f 93       	push	r17
 872:	cf 93       	push	r28
 874:	df 93       	push	r29
 876:	cd b7       	in	r28, 0x3d	; 61
 878:	de b7       	in	r29, 0x3e	; 62
 87a:	ca 1b       	sub	r28, r26
 87c:	db 0b       	sbc	r29, r27
 87e:	0f b6       	in	r0, 0x3f	; 63
 880:	f8 94       	cli
 882:	de bf       	out	0x3e, r29	; 62
 884:	0f be       	out	0x3f, r0	; 63
 886:	cd bf       	out	0x3d, r28	; 61
 888:	09 94       	ijmp

0000088a <__epilogue_restores__>:
 88a:	2a 88       	ldd	r2, Y+18	; 0x12
 88c:	39 88       	ldd	r3, Y+17	; 0x11
 88e:	48 88       	ldd	r4, Y+16	; 0x10
 890:	5f 84       	ldd	r5, Y+15	; 0x0f
 892:	6e 84       	ldd	r6, Y+14	; 0x0e
 894:	7d 84       	ldd	r7, Y+13	; 0x0d
 896:	8c 84       	ldd	r8, Y+12	; 0x0c
 898:	9b 84       	ldd	r9, Y+11	; 0x0b
 89a:	aa 84       	ldd	r10, Y+10	; 0x0a
 89c:	b9 84       	ldd	r11, Y+9	; 0x09
 89e:	c8 84       	ldd	r12, Y+8	; 0x08
 8a0:	df 80       	ldd	r13, Y+7	; 0x07
 8a2:	ee 80       	ldd	r14, Y+6	; 0x06
 8a4:	fd 80       	ldd	r15, Y+5	; 0x05
 8a6:	0c 81       	ldd	r16, Y+4	; 0x04
 8a8:	1b 81       	ldd	r17, Y+3	; 0x03
 8aa:	aa 81       	ldd	r26, Y+2	; 0x02
 8ac:	b9 81       	ldd	r27, Y+1	; 0x01
 8ae:	ce 0f       	add	r28, r30
 8b0:	d1 1d       	adc	r29, r1
 8b2:	0f b6       	in	r0, 0x3f	; 63
 8b4:	f8 94       	cli
 8b6:	de bf       	out	0x3e, r29	; 62
 8b8:	0f be       	out	0x3f, r0	; 63
 8ba:	cd bf       	out	0x3d, r28	; 61
 8bc:	ed 01       	movw	r28, r26
 8be:	08 95       	ret

000008c0 <_exit>:
 8c0:	f8 94       	cli

000008c2 <__stop_program>:
 8c2:	ff cf       	rjmp	.-2      	; 0x8c2 <__stop_program>
